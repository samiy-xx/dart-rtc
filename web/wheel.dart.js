// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].

window.navigator.webkitGetUserMedia = (window.navigator.webkitGetUserMedia == undefined) ? window.navigator.getUserMedia : window.navigator.webkitGetUserMedia;
RTCPeerConnection = (typeof RTCPeerConnection == 'undefined') ? webkitRTCPeerConnection : RTCPeerConnection;

function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.ListIterator = {"":"Object;i,list",
 get$hasNext: function() {
  return $.lt(this.i, this.list.length);
},
 next$0: function() {
  var value, t1;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  value = this.list[this.i];
  t1 = this.i;
  if (typeof t1 !== 'number')
    return this.next$0$bailout0(1, t1, value);
  this.i = t1 + 1;
  return value;
},
 next$0$bailout0: function(state0, t1, value) {
  this.i = $.add(t1, 1);
  return value;
}
};

$$.Closure = {"":"Object;",
 toString$0: function() {
  return "Closure";
}
};

$$.Dynamic_ = {"":"Object;"
};

$$.Null = {"":"Object;"
};

$$.MetaInfo = {"":"Object;_tag>,_tags,_set>"
};

$$.JSSyntaxRegExp = {"":"Object;_liblib1$_pattern,_multiLine,_ignoreCase",
 firstMatch$1: function(str) {
  var m, matchStart, t1, matchEnd;
  m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  matchStart = m.index;
  t1 = $.index(m, 0);
  t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 get$pattern: function() {
  return this._liblib1$_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true
};

$$._MatchImplementation = {"":"Object;pattern>,str,start,end,_groups",
 operator$index$1: function(index) {
  return $.index(this._groups, index);
}
};

$$._AllMatchesIterable = {"":"Object;_re,_str",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"":"Object;_re,_str,_liblib1$_next=,_done",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  var next = this._liblib1$_next;
  this._liblib1$_next = null;
  return next;
},
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._liblib1$_next == null))
    return true;
  this._liblib1$_next = this._re.firstMatch$1(this._str);
  if (this._liblib1$_next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.StringMatch = {"":"Object;start,str,pattern>",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
}
};

$$._DateImpl = {"":"Object;millisecondsSinceEpoch>,isUtc",
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Date))
    return false;
  return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$lt$1: function(other) {
  return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$le$1: function(other) {
  return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$gt$1: function(other) {
  return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$ge$1: function(other) {
  return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 get$hashCode: function() {
  return this.millisecondsSinceEpoch;
},
 toString$0: function() {
  var t1, t2, t3, y, m, d, h, min, sec, ms;
  t1 = new $._DateImpl_toString_fourDigits();
  t2 = new $._DateImpl_toString_threeDigits();
  t3 = new $._DateImpl_toString_twoDigits();
  y = t1.call$1(this.get$year());
  m = t3.call$1(this.get$month());
  d = t3.call$1(this.get$day());
  h = t3.call$1(this.get$hour());
  min = t3.call$1(this.get$minute());
  sec = t3.call$1(this.get$second());
  ms = t2.call$1(this.get$millisecond());
  if (this.isUtc === true)
    return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
  else
    return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
},
 add$1: function(duration) {
  var ms, t2;
  ms = this.millisecondsSinceEpoch;
  if (typeof ms !== 'number')
    return this.add$1$bailout0(1, duration, ms);
  t2 = duration.get$inMilliseconds();
  if (typeof t2 !== 'number')
    return this.add$1$bailout0(2, ms, t2);
  return $.Date_Date$fromMillisecondsSinceEpoch(ms + t2, this.isUtc);
},
 add$1$bailout0: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      ms = env1;
      duration = env0;
      break;
    case 2:
      t2 = env1;
      ms = env0;
      break;
  }
  switch (state0) {
    case 0:
      ms = this.millisecondsSinceEpoch;
    case 1:
      state0 = 0;
      t2 = duration.get$inMilliseconds();
    case 2:
      var ms, duration, t2;
      state0 = 0;
      return $.Date_Date$fromMillisecondsSinceEpoch($.add(ms, t2), this.isUtc);
  }
},
 get$year: function() {
  return $.Primitives_getYear(this);
},
 get$month: function() {
  return $.Primitives_getMonth(this);
},
 get$day: function() {
  return $.Primitives_getDay(this);
},
 get$hour: function() {
  return $.Primitives_getHours(this);
},
 get$minute: function() {
  return $.Primitives_getMinutes(this);
},
 get$second: function() {
  return $.Primitives_getSeconds(this);
},
 get$millisecond: function() {
  return $.Primitives_getMilliseconds(this);
},
 _DateImpl$now$0: function() {
  $.Primitives_lazyAsJsDate(this);
},
 _DateImpl$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
  var t1 = this.millisecondsSinceEpoch;
  if ($.gtB($.getInterceptor$JSNumber(t1).abs$0(t1), 8640000000000000))
    throw $.$$throw($.ArgumentError$(t1));
  t1 = this.isUtc;
  if (t1 == null)
    throw $.$$throw($.ArgumentError$(t1));
},
 is$Date: true
};

$$.NullThrownError = {"":"Object;",
 toString$0: function() {
  return "Throw of null.";
}
};

$$.ArgumentError = {"":"Object;message>",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return "Illegal argument(s): " + $.S(t1);
  return "Illegal argument(s)";
}
};

$$.RangeError = {"":"ArgumentError;message",
 toString$0: function() {
  return "RangeError: " + $.S(this.message);
}
};

$$.NoSuchMethodError = {"":"Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
 toString$0: function() {
  var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_0 = $.StringBuffer_StringBuffer("");
  t1.i_1 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_1, t2.length); t1.i_1 = $.add(t1.i_1, 1)) {
    if ($.gtB(t1.i_1, 0)) {
      t3 = t1.sb_0;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_0;
    t4 = $.getInterceptor$JSArray(t3);
    t5 = t1.i_1;
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= t2.length)
      throw $.ioore(t5);
    t4.add$1(t3, $.Error_safeToString(t2[t5]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  t3 = t1.sb_0;
  actualParameters = $.getInterceptor(t3).toString$0(t3);
  t1.sb_0 = $.StringBuffer_StringBuffer("");
  for (i = 0; i < t2.length; ++i) {
    if (i > 0) {
      t3 = t1.sb_0;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_0;
    t4 = $.getInterceptor$JSArray(t3);
    if (i >= t2.length)
      throw $.ioore(i);
    t4.add$1(t3, t2[i]);
  }
  t1 = t1.sb_0;
  formalParameters = $.getInterceptor(t1).toString$0(t1);
  t1 = this._memberName;
  return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_0 = $.StringBuffer_StringBuffer("");
      t1.i_1 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (; $.ltB(t1.i_1, $.getInterceptor$JSStringJSArray(t2).get$length(t2)); t1.i_1 = $.add(t1.i_1, 1)) {
          if ($.gtB(t1.i_1, 0)) {
            t3 = t1.sb_0;
            $.getInterceptor$JSArray(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_0;
          $.getInterceptor$JSArray(t3).add$1(t3, $.Error_safeToString($.index(t2, t1.i_1)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, t3, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
      else {
        t3 = t1.sb_0;
        actualParameters = $.getInterceptor(t3).toString$0(t3);
        t1.sb_0 = $.StringBuffer_StringBuffer("");
        for (i = 0; $.ltB(i, $.getInterceptor$JSStringJSArray(t2).get$length(t2)); ++i) {
          if (i > 0) {
            t3 = t1.sb_0;
            $.getInterceptor$JSArray(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_0;
          $.getInterceptor$JSArray(t3).add$1(t3, $.index(t2, i));
        }
        t1 = t1.sb_0;
        formalParameters = $.getInterceptor(t1).toString$0(t1);
        t1 = this._memberName;
        return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
      }
  }
}
};

$$.UnsupportedError = {"":"Object;message>",
 toString$0: function() {
  return "Unsupported operation: " + $.S(this.get$message());
}
};

$$.UnimplementedError = {"":"Object;message>",
 toString$0: function() {
  var t1 = this.message;
  return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
}
};

$$.StateError = {"":"Object;message>",
 toString$0: function() {
  return "Bad state: " + this.message;
}
};

$$.StackOverflowError = {"":"Object;",
 toString$0: function() {
  return "Stack Overflow";
}
};

$$.RuntimeError = {"":"Object;message>",
 toString$0: function() {
  return "RuntimeError: " + this.message;
}
};

$$._ExceptionImplementation = {"":"Object;message>",
 toString$0: function() {
  var t1 = this.message;
  if (t1 == null)
    return "Exception";
  return "Exception: " + $.S(t1);
}
};

$$.FormatException = {"":"Object;message>",
 toString$0: function() {
  return "FormatException: " + $.S(this.message);
}
};

$$.IllegalJSRegExpException = {"":"Object;_pattern,_errmsg",
 toString$0: function() {
  return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
}
};

$$._HashMapImpl = {"":"Object;_keys,_values,_loadLimit,_numberOfEntries,_numberOfDeleted",
 _probeForAdding$1: function(key) {
  var t1, hash, insertionIndex, numberOfProbes, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  t1 = $.getInterceptor(key).get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  hash = (t1 & this._keys.length - 1) >>> 0;
  for (insertionIndex = -1, numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CONSTANT3)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    if (hash !== (hash | 0))
      return this._probeForAdding$1$bailout(2, key, insertionIndex, hash, numberOfProbes0);
  }
},
 _probeForAdding$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env1;
      key = env0;
      break;
    case 2:
      numberOfProbes0 = env3;
      hash = env2;
      insertionIndex = env1;
      key = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (key == null)
        throw $.$$throw($.ArgumentError$(null));
      t1 = $.getInterceptor(key).get$hashCode(key);
    case 1:
      state0 = 0;
      hash = $.and(t1, this._keys.length - 1);
      insertionIndex = -1;
      numberOfProbes = 1;
    case 2:
      var t1, key, hash, insertionIndex, numberOfProbes, existingKey, numberOfProbes0;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
              t1 = this._keys;
              if (hash !== (hash | 0))
                throw $.iae(hash);
              if (hash < 0 || hash >= t1.length)
                throw $.ioore(hash);
              existingKey = t1[hash];
              if (existingKey == null) {
                if (insertionIndex < 0)
                  return hash;
                return insertionIndex;
              } else if ($.eqB(existingKey, key))
                return hash;
              else if (insertionIndex < 0 && existingKey === $.CONSTANT3)
                insertionIndex = hash;
              numberOfProbes0 = numberOfProbes + 1;
              hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
            case 2:
              state0 = 0;
              numberOfProbes = numberOfProbes0;
          }
  }
},
 _probeForLookup$1: function(key) {
  var hash, numberOfProbes, t1, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  hash = $.and($.getInterceptor(key).get$hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, t1, existingKey, numberOfProbes0;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, capacity, numberOfFreeOrDeleted, t1;
  newNumberOfEntries = $.add(this._numberOfEntries, 1);
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  capacity = this._keys.length;
  if (typeof newNumberOfEntries !== 'number')
    throw $.iae(newNumberOfEntries);
  numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  t1 = this._numberOfDeleted;
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(capacity);
},
 _grow$1: function(newCapacity) {
  var capacity, oldKeys, oldValues, i, key, value, newIndex, t1;
  capacity = this._keys.length;
  this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
  oldKeys = this._keys;
  oldValues = this._values;
  this._keys = $.List_List(newCapacity);
  this._values = $.List_List(newCapacity);
  for (i = 0; i < capacity; ++i) {
    if (i >= oldKeys.length)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CONSTANT3)
      continue;
    if (i >= oldValues.length)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    t1 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t1.length)
      throw $.ioore(newIndex);
    t1[newIndex] = key;
    t1 = this._values;
    if (newIndex >= t1.length)
      throw $.ioore(newIndex);
    t1[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  var t1, length$, t2, t3, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  t1 = this._keys;
  length$ = t1.length;
  for (t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 operator$indexSet$2: function(key, value) {
  var index, t1;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CONSTANT3)
    this._numberOfEntries = $.add(this._numberOfEntries, 1);
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index, t1;
  index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 remove$1: function(key) {
  var index, t1, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this._numberOfEntries = $.sub(this._numberOfEntries, 1);
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CONSTANT3;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 get$isEmpty: function() {
  return $.eq(this._numberOfEntries, 0);
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$, i, t1, key;
  length$ = this._keys.length;
  for (i = 0; i < length$; ++i) {
    t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    key = t1[i];
    if (!(key == null) && !(key === $.CONSTANT3)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  this._keys = $.List_List(8);
  this._values = $.List_List(8);
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"":"Object;"
};

$$._KeyValuePair = {"":"Object;key>,value="
};

$$._LinkedHashMapImpl = {"":"Object;_list,_map",
 operator$indexSet$2: function(key, value) {
  if (this._map.containsKey$1(key) === true)
    $.index(this._map, key).get$element().set$value(value);
  else {
    this._list.addLast$1($._KeyValuePair$(key, value));
    $.indexSet(this._map, key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = $.index(this._map, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 forEach$1: function(f) {
  this._list.forEach$1(new $._LinkedHashMapImpl_forEach_anon(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  var t1 = this._map;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 clear$0: function() {
  var t1 = this._map;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  this._list.clear$0();
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  this._map = $.HashMap_HashMap();
  this._list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.Object = {"":";",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.DoubleLinkedQueueEntry = {"":"Object;_previous=,_next=,_element>",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"":"DoubleLinkedQueueEntry;_previous,_next,_element",
 remove$0: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"":"Object;_sentinel",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 get$last: function() {
  return this._sentinel._previous.get$element();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_0 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length_anon(t1));
  return t1.counter_0;
},
 get$isEmpty: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
  }
},
 filter$1: function(f) {
  var other, entry, t1, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (t1 = $.getInterceptor$JSArray(other); !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) === true)
      t1.addLast$1(other, entry.get$_element());
  }
  return other;
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"":"Object;_sentinel,_currentEntry",
 get$hasNext: function() {
  var t1, t2;
  t1 = this._currentEntry.get$_next();
  t2 = this._sentinel;
  return !(t1 == null ? t2 == null : t1 === t2);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$._StringBufferImpl = {"":"Object;_buffer,_length",
 get$length: function() {
  return this._length;
},
 get$isEmpty: function() {
  return $.eq(this._length, 0);
},
 add$1: function(obj) {
  var str, t1, t3;
  str = $.getInterceptor(obj).toString$0(obj);
  if (str == null || $.getInterceptor$JSStringJSArray(str).get$isEmpty(str) === true)
    return this;
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, str);
  t1 = this._length;
  if (typeof t1 !== 'number')
    return this.add$1$bailout(1, str, t1);
  t3 = $.getInterceptor$JSStringJSArray(str).get$length(str);
  if (typeof t3 !== 'number')
    return this.add$1$bailout(2, t3, t1);
  this._length = t1 + t3;
  return this;
},
 add$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env1;
      str = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      str = $.getInterceptor(obj).toString$0(obj);
      if (str == null || $.getInterceptor$JSStringJSArray(str).get$isEmpty(str) === true)
        return this;
      t1 = this._buffer;
      $.getInterceptor$JSArray(t1).add$1(t1, str);
      t1 = this._length;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(str).get$length(str);
    case 2:
      var str, t1, t3;
      state0 = 0;
      this._length = $.add(t1, t3);
      return this;
  }
},
 clear$0: function() {
  this._buffer = $.List_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  var t1, result;
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0))
    return "";
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1))
    return $.index(this._buffer, 0);
  result = $.stringJoinUnchecked($.Strings__toJsStringArray(this._buffer), "");
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ObjectInterceptor = {"":"Object;",
 toString$0: function(receiver) {
  return receiver.toString$0();
},
 add$1: function(receiver, a0) {
  return receiver.add$1(a0);
},
 charCodeAt$1: function(receiver, a0) {
  return receiver.charCodeAt$1(a0);
},
 iterator$0: function(receiver) {
  return receiver.iterator$0();
},
 substring$1: function(receiver, a0) {
  return receiver.substring$1(a0);
},
 replaceAll$2: function(receiver, a0, a1) {
  return receiver.replaceAll$2(a0, a1);
},
 ceil$0: function(receiver) {
  return receiver.ceil$0();
},
 set$length: function(receiver, value) {
  return receiver.set$length(value);
},
 indexOf$2: function(receiver, a0, a1) {
  return receiver.indexOf$2(a0, a1);
},
 toDouble$0: function(receiver) {
  return receiver.toDouble$0();
},
 forEach$1: function(receiver, a0) {
  return receiver.forEach$1(a0);
},
 contains$2: function(receiver, a0, a1) {
  return receiver.contains$2(a0, a1);
},
 abs$0: function(receiver) {
  return receiver.abs$0();
},
 get$length: function(receiver) {
  return receiver.get$length();
},
 addLast$1: function(receiver, a0) {
  return receiver.addLast$1(a0);
},
 getRange$2: function(receiver, a0, a1) {
  return receiver.getRange$2(a0, a1);
},
 get$isEmpty: function(receiver) {
  return receiver.get$isEmpty();
},
 removeAt$1: function(receiver, a0) {
  return receiver.removeAt$1(a0);
},
 substring$2: function(receiver, a0, a1) {
  return receiver.substring$2(a0, a1);
},
 get$isNaN: function(receiver) {
  return receiver.get$isNaN();
},
 truncate$0: function(receiver) {
  return receiver.truncate$0();
},
 get$hashCode: function(receiver) {
  return receiver.get$hashCode();
},
 contains$1: function(receiver, a0) {
  return receiver.contains$1(a0);
},
 clear$0: function(receiver) {
  return receiver.clear$0();
},
 endsWith$1: function(receiver, a0) {
  return receiver.endsWith$1(a0);
},
 get$last: function(receiver) {
  return receiver.get$last();
},
 filter$1: function(receiver, a0) {
  return receiver.filter$1(a0);
},
 floor$0: function(receiver) {
  return receiver.floor$0();
},
 allMatches$1: function(receiver, a0) {
  return receiver.allMatches$1(a0);
},
 removeLast$0: function(receiver) {
  return receiver.removeLast$0();
},
 indexOf$1: function(receiver, a0) {
  return receiver.indexOf$1(a0);
}
};

$$.JSFunction = {"":"Object;",
 toString$0: function(receiver) {
  return "Closure";
}
};

$$.JSBool = {"":"Object;",
 toString$0: function(receiver) {
  return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver ? 519018 : 218159;
},
 is$bool: true
};

$$.JSNull = {"":"Object;",
 toString$0: function(receiver) {
  return "null";
},
 get$hashCode: function(receiver) {
  return 0;
}
};

$$.JSArray = {"":"Object;",
 add$1: function(receiver, value) {
  $.checkGrowable(receiver, "add");
  receiver.push(value);
},
 removeAt$1: function(receiver, index) {
  if (!(typeof index === 'number' && Math.floor(index) === index))
    throw $.$$throw($.ArgumentError$(index));
  if (index < 0 || index >= receiver.length)
    throw $.$$throw($.RangeError$value(index));
  $.checkGrowable(receiver, "removeAt");
  return receiver.splice(index, 1)[0];
},
 removeLast$0: function(receiver) {
  $.checkGrowable(receiver, "removeLast");
  if (receiver.length === 0)
    throw $.$$throw($.RangeError$value(-1));
  return receiver.pop();
},
 filter$1: function(receiver, f) {
  return $.Collections_filter(receiver, [], f);
},
 addLast$1: function(receiver, value) {
  $.checkGrowable(receiver, "addLast");
  receiver.push(value);
},
 clear$0: function(receiver) {
  this.set$length(receiver, 0);
},
 forEach$1: function(receiver, f) {
  return $.Collections_forEach(receiver, f);
},
 getRange$2: function(receiver, start, length$) {
  var t1, end;
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + length$;
  if (end > receiver.length)
    throw $.$$throw($.RangeError$value(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
},
 get$last: function(receiver) {
  var t1, t2;
  t1 = receiver.length;
  t2 = t1 - 1;
  if (t2 < 0)
    throw $.ioore(t2);
  return receiver[t2];
},
 indexOf$2: function(receiver, element, start) {
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  return $.Arrays_indexOf(receiver, element, start, receiver.length);
},
 indexOf$1: function($receiver, element) {
  return this.indexOf$2($receiver, element, 0);
},
 contains$1: function(receiver, other) {
  var i;
  for (i = 0; i < receiver.length; ++i)
    if ($.eqB(other, receiver[i]))
      return true;
  return false;
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return $.Collections_collectionToString(receiver);
},
 iterator$0: function(receiver) {
  return $.ListIterator$(receiver);
},
 get$hashCode: function(receiver) {
  return $.Primitives_objectHashCode(receiver);
},
 get$length: function(receiver) {
  return receiver.length;
},
 set$length: function(receiver, newLength) {
  if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
    throw $.$$throw($.ArgumentError$(newLength));
  if (newLength < 0)
    throw $.$$throw($.RangeError$value(newLength));
  $.checkGrowable(receiver, "set length");
  receiver.length = newLength;
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.JSNumber = {"":"Object;",
 get$isNaN: function(receiver) {
  return isNaN(receiver);
},
 abs$0: function(receiver) {
  return Math.abs(receiver);
},
 ceil$0: function(receiver) {
  return Math.ceil(receiver);
},
 floor$0: function(receiver) {
  return Math.floor(receiver);
},
 toDouble$0: function(receiver) {
  return receiver;
},
 truncate$0: function(receiver) {
  return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
},
 toString$0: function(receiver) {
  if (receiver === 0 && (1 / receiver) < 0)
    return "-0.0";
  else
    return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver & 536870911;
}
};

$$.JSInt = {"":"JSNumber;"
};

$$.JSDouble = {"":"JSNumber;"
};

$$.JSString = {"":"Object;",
 charCodeAt$1: function(receiver, index) {
  if (!(typeof index === 'number'))
    throw $.$$throw($.ArgumentError$(index));
  if (index < 0)
    throw $.$$throw($.RangeError$value(index));
  if (index >= receiver.length)
    throw $.$$throw($.RangeError$value(index));
  return receiver.charCodeAt(index);
},
 allMatches$1: function(receiver, str) {
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
},
 endsWith$1: function(receiver, other) {
  var otherLength, t1;
  $.checkString(other);
  otherLength = other.length;
  t1 = receiver.length;
  if (otherLength > t1)
    return false;
  return other === this.substring$1(receiver, t1 - otherLength);
},
 replaceAll$2: function(receiver, from, to) {
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
},
 substring$2: function(receiver, startIndex, endIndex) {
  $.checkNum(startIndex);
  if (endIndex == null)
    endIndex = receiver.length;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, receiver.length))
    throw $.$$throw($.RangeError$value(endIndex));
  return receiver.substring(startIndex, endIndex);
},
 substring$1: function($receiver, startIndex) {
  return this.substring$2($receiver, startIndex, null);
},
 indexOf$2: function(receiver, other, start) {
  $.checkNull(other);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof other === 'string'))
    throw $.$$throw($.ArgumentError$(other));
  if (start < 0)
    return -1;
  return receiver.indexOf(other, start);
},
 indexOf$1: function($receiver, other) {
  return this.indexOf$2($receiver, other, 0);
},
 contains$2: function(receiver, other, startIndex) {
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
},
 contains$1: function($receiver, other) {
  return this.contains$2($receiver, other, 0);
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return receiver;
},
 get$hashCode: function(receiver) {
  var hash, i, hash0, hash1;
  for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
    hash1 = hash1 ^ (hash1 >> 6);
  }
  hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash0 = hash0 ^ (hash0 >> 11);
  return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
},
 get$length: function(receiver) {
  return receiver.length;
},
 is$String: true
};

$$.QuickHandler = {"":"Object;_sh,_pm,_local>,_remote>,_current=,_liblib2$_next=,_notify",
 set$local: function(e) {
  this._local = e;
  return e;
},
 set$remote: function(e) {
  this._remote = e;
  return e;
},
 set$next: function(e) {
  return this.setNextButton$1(e);
},
 setNextButton$1: function(e) {
  var t1;
  this._liblib2$_next = e;
  t1 = this._liblib2$_next.get$on().get$click();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$nextButtonClicked());
},
 nextButtonClicked$1: function(e) {
  var t1;
  this._pm.closeAll$0();
  t1 = this._sh;
  t1.send$1($.PacketFactory_get($.RandomUserPacket$With(t1.get$id())));
  this._remote.pause$0();
  this._remote.set$src(null);
  this._current = this._local;
  this.resizeLarge$1(this._current);
  this.resizeSmall$1($.eqB(this._current, this._remote) ? this._local : this._remote);
},
 get$nextButtonClicked: function() {
  return new $.BoundClosure(this, 'nextButtonClicked$1');
},
 initialize$0: function() {
  this._notify.display$1("Connecting...");
  this._sh.initialize$0();
},
 close$0: function() {
  this._sh.close$0();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 resize$0: function() {
  this.resizeLarge$1(this._current);
  this.resizeSmall$1($.eqB(this._current, this._remote) ? this._local : this._remote);
},
 get$resize: function() {
  return new $.BoundClosure0(this, 'resize$0');
},
 resizeLarge$1: function(e) {
  var w, aspectRatio, t1;
  w = $.gtB($.document().get$documentElement().get$clientWidth(), 800) ? 800 : $.document().get$documentElement().get$clientWidth();
  aspectRatio = $.Util_aspectRatio(e.get$videoWidth(), e.get$videoHeight());
  e.get$style().set$top("0px");
  e.get$style().set$left("0px");
  e.set$width($.sub(w, 20));
  e.set$height($.Util_getHeight($.sub(w, 20), aspectRatio));
  e.get$style().set$zIndex("9997");
  t1 = $.S(e.get$height()) + "px";
  $.query("#container").get$style().set$height(t1);
  t1 = $.S(e.get$height()) + "px";
  $.query("#videocontainer").get$style().set$height(t1);
},
 resizeSmall$1: function(e) {
  var h = $.Util_getHeight(100, $.Util_aspectRatio(e.get$videoWidth(), e.get$videoHeight()));
  e.get$style().set$top("10px");
  e.get$style().set$left("10px");
  e.set$width(100);
  e.set$height(h);
  e.get$style().set$zIndex("9998");
},
 setMainVideo$1: function(ms) {
  var t1;
  $.Logger_Logger().Debug$1("Setting local video");
  t1 = $.Url_createObjectUrl(ms);
  this._local.set$src(t1);
  t1 = this._local.get$on().get$loadedMetadata();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.QuickHandler_setMainVideo_anon(this));
},
 onRemoteMediaStreamAvailable$3: function(ms, id, isMain) {
  var t1;
  $.Logger_Logger().Debug$1("Incoming video stream");
  this._notify.display$1("Incoming video stream");
  t1 = $.Url_createObjectUrl(ms);
  this._remote.set$src(t1);
  t1 = this._remote.get$on().get$loadedMetadata();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.QuickHandler_onRemoteMediaStreamAvailable_anon(this));
},
 handleUserMessage$1: function(um) {
  $.Logger_Logger().Debug$1("UserMessage");
},
 get$handleUserMessage: function() {
  return new $.BoundClosure(this, 'handleUserMessage$1');
},
 handleDisconnected$1: function(d) {
  $.Logger_Logger().Debug$1("User disconnected");
  this._notify.display$1("User disconnected...");
  this._remote.pause$0();
  this._remote.set$src(null);
  this._current = this._local;
  this.resizeLarge$1(this._current);
  this.resizeSmall$1($.eqB(this._current, this._remote) ? this._local : this._remote);
},
 get$handleDisconnected: function() {
  return new $.BoundClosure(this, 'handleDisconnected$1');
},
 handleConnected$1: function(csp) {
  $.Logger_Logger().Debug$1("Connected to signaling server");
  this._notify.display$1("Connected to signaling server succesfully!");
},
 get$handleConnected: function() {
  return new $.BoundClosure(this, 'handleConnected$1');
},
 handleBye$1: function(bp) {
  $.Logger_Logger().Debug$1("User left");
  this._notify.display$1("User disconnected...");
  this._remote.pause$0();
  this._remote.set$src(null);
  this._current = this._local;
  this.resizeLarge$1(this._current);
  this.resizeSmall$1($.eqB(this._current, this._remote) ? this._local : this._remote);
},
 get$handleBye: function() {
  return new $.BoundClosure(this, 'handleBye$1');
},
 handleId$1: function(ip) {
  var t1, t2;
  $.Logger_Logger().Debug$1("User idpacket");
  if (!(ip.get$id() == null)) {
    t1 = ip.get$id();
    t2 = $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) !== true;
    t1 = t2;
  } else
    t1 = false;
  t2 = this._notify;
  if (t1)
    t2.display$1("User connected...");
  else
    t2.display$1("No users available.");
},
 get$handleId: function() {
  return new $.BoundClosure(this, 'handleId$1');
},
 handleJoin$1: function(jp) {
  $.Logger_Logger().Debug$1("USer joinpacket");
},
 get$handleJoin: function() {
  return new $.BoundClosure(this, 'handleJoin$1');
},
 QuickHandler$0: function() {
  this._current = this._local;
  this._notify = $.Notifier_Notifier();
  this._notify.setParent$1("#videocontainer");
  this._sh = $.WheelSignalHandler$();
  this._pm = $.PeerManager_PeerManager();
  this._sh.registerHandler$2("usermessage", this.get$handleUserMessage());
  this._sh.registerHandler$2("connected", this.get$handleConnected());
  this._sh.registerHandler$2("disconnected", this.get$handleDisconnected());
  this._sh.registerHandler$2("bye", this.get$handleBye());
  this._sh.registerHandler$2("id", this.get$handleId());
  this._sh.registerHandler$2("join", this.get$handleJoin());
  this._pm.subscribe$1(this);
},
 is$PeerMediaEventListener: true
};

$$.BodyElementEvents = {"":"ElementEvents;_ptr",
 get$beforeUnload: function() {
  return this.operator$index$1("beforeunload");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$message: function() {
  return this.operator$index$1("message");
},
 get$resize: function() {
  return this.operator$index$1("resize");
},
 resize$0: function() {
  return this.get$resize().call$0();
}
};

$$.DocumentEvents = {"":"ElementEvents;_ptr"
};

$$._ChildrenElementList = {"":"Object;_liblib$_element>,_childElements",
 _toList$0: function() {
  var t1, t3, output, len, i, t2;
  t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._toList$0$bailout(1, t1);
  t3 = t1.length;
  output = $.List_List(t3);
  len = t1.length;
  i = 0;
  for (; i < len; ++i) {
    t2 = t1[i];
    if (i >= t3)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 _toList$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      output = env2;
      len = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._childElements;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(t1);
      output = $.List_List(t3.get$length(t1));
      len = t3.get$length(t1);
    case 2:
      var t1, t3, output, len, i, t2;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i) {
        t2 = $.index(t1, i);
        if (i >= output.length)
          throw $.ioore(i);
        output[i] = t2;
      }
      return output;
  }
},
 contains$1: function(element) {
  var t1 = this._childElements;
  return $.getInterceptor$JSStringJSArray(t1).contains$1(t1, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = this._childElements, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var output, t1, t2;
  output = [];
  t1 = new $._ChildrenElementList_filter_anon(output, f);
  for (t2 = this._childElements, t2 = $.getInterceptor$JSArray(t2).iterator$0(t2); t2.get$hasNext() === true;)
    t1.call$1(t2.next$0());
  return $._FrozenElementList$_wrap(output);
},
 get$isEmpty: function() {
  return this._liblib$_element.firstElementChild == null;
},
 get$length: function() {
  var t1 = this._childElements;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this._childElements, index);
},
 operator$indexSet$2: function(index, value) {
  this._liblib$_element.$$dom_replaceChild$2(value, $.index(this._childElements, index));
},
 set$length: function(newLength) {
  throw $.$$throw($.UnsupportedError$(""));
},
 add$1: function(value) {
  this._liblib$_element.$$dom_appendChild$1(value);
  return value;
},
 addLast$1: function(value) {
  this._liblib$_element.$$dom_appendChild$1(value);
  return value;
},
 iterator$0: function() {
  var t1 = this._toList$0();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($.Lists_getRange(this, start, rangeLength, []));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 clear$0: function() {
  this._liblib$_element.textContent = "";
},
 removeAt$1: function(index) {
  var result = this.operator$index$1(index);
  if (!(result == null))
    this._liblib$_element.$$dom_removeChild$1(result);
  return result;
},
 removeLast$0: function() {
  var result = $.getInterceptor$JSArray(this).get$last(this);
  if (!(result == null))
    this._liblib$_element.$$dom_removeChild$1(result);
  return result;
},
 get$last: function() {
  return this._liblib$_element.lastElementChild;
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementList = {"":"Object;_nodeList",
 contains$1: function(element) {
  var t1;
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
},
 forEach$1: function(f) {
  var t1;
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var out, t1, t2;
  out = [];
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      out.push(t2);
  }
  return out;
},
 get$isEmpty: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this._nodeList, index);
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 set$length: function(newLength) {
  var t1 = this._nodeList;
  $.getInterceptor$JSArray(t1).set$length(t1, newLength);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 iterator$0: function() {
  return $._FrozenElementListIterator$(this);
},
 getRange$2: function(start, rangeLength) {
  var t1 = this._nodeList;
  return $._FrozenElementList$_wrap($.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength));
},
 indexOf$2: function(element, start) {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).indexOf$2(t1, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$(""));
},
 removeAt$1: function(index) {
  throw $.$$throw($.UnsupportedError$(""));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$(""));
},
 get$last: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSArray(t1).get$last(t1);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementListIterator = {"":"Object;_liblib$_list,_index",
 next$0: function() {
  var t1, t2;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._liblib$_list;
  t2 = this._index;
  if (typeof t2 !== 'number')
    return this.next$0$bailout1(1, t2, t1);
  this._index = t2 + 1;
  return t1.operator$index$1(t2);
},
 next$0$bailout1: function(state0, t2, t1) {
  this._index = $.add(t2, 1);
  return t1.operator$index$1(t2);
},
 get$hasNext: function() {
  var t1, t2;
  t1 = this._index;
  t2 = this._liblib$_list;
  return $.lt(t1, $.getInterceptor$JSStringJSArray(t2).get$length(t2));
}
};

$$.ElementEvents = {"":"Events;_ptr",
 get$click: function() {
  return this.operator$index$1("click");
},
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.Events = {"":"Object;_ptr",
 operator$index$1: function(type) {
  return $.EventListenerList$(this._ptr, type);
}
};

$$.EventListenerList = {"":"Object;_ptr,_liblib$_type",
 add$2: function(listener, useCapture) {
  this._ptr.$$dom_addEventListener$3(this._liblib$_type, listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener, false);
},
 remove$2: function(listener, useCapture) {
  this._ptr.$$dom_removeEventListener$3(this._liblib$_type, listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener, false);
}
};

$$.FrameSetElementEvents = {"":"ElementEvents;_ptr",
 get$beforeUnload: function() {
  return this.operator$index$1("beforeunload");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$message: function() {
  return this.operator$index$1("message");
},
 get$resize: function() {
  return this.operator$index$1("resize");
},
 resize$0: function() {
  return this.get$resize().call$0();
}
};

$$.InputElementEvents = {"":"ElementEvents;_ptr"
};

$$.LocalWindowEvents = {"":"Events;_ptr",
 get$beforeUnload: function() {
  return this.operator$index$1("beforeunload");
},
 get$click: function() {
  return this.operator$index$1("click");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$loadedMetadata: function() {
  return this.operator$index$1("loadedmetadata");
},
 get$message: function() {
  return this.operator$index$1("message");
},
 get$pause: function() {
  return this.operator$index$1("pause");
},
 pause$0: function() {
  return this.get$pause().call$0();
},
 get$resize: function() {
  return this.operator$index$1("resize");
},
 resize$0: function() {
  return this.get$resize().call$0();
}
};

$$.MediaElementEvents = {"":"ElementEvents;_ptr",
 get$loadedMetadata: function() {
  return this.operator$index$1("loadedmetadata");
},
 get$pause: function() {
  return this.operator$index$1("pause");
},
 pause$0: function() {
  return this.get$pause().call$0();
}
};

$$.MediaStreamEvents = {"":"Events;_ptr"
};

$$._ChildNodeListLazy = {"":"Object;_this",
 get$last: function() {
  return this._this.lastChild;
},
 add$1: function(value) {
  this._this.$$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._this.$$dom_appendChild$1(value);
},
 removeLast$0: function() {
  var result = this.get$last();
  if (!(result == null))
    this._this.$$dom_removeChild$1(result);
  return result;
},
 removeAt$1: function(index) {
  var result = this.operator$index$1(index);
  if (!(result == null))
    this._this.$$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._this.textContent = "";
},
 operator$indexSet$2: function(index, value) {
  this._this.$$dom_replaceChild$2(value, this.operator$index$1(index));
},
 iterator$0: function() {
  var t1 = this._this.childNodes;
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 get$length: function() {
  var t1 = this._this.childNodes;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot set length on immutable List."));
},
 operator$index$1: function(index) {
  return $.index(this._this.childNodes, index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.RtcDataChannelEvents = {"":"Events;_ptr",
 get$close: function() {
  return this.operator$index$1("close");
},
 close$0: function() {
  return this.get$close().call$0();
},
 close$2: function(arg0, arg1) {
  return this.get$close().call$2(arg0, arg1);
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$message: function() {
  return this.operator$index$1("message");
},
 get$open: function() {
  return this.operator$index$1("open");
}
};

$$.RtcPeerConnectionEvents = {"":"Events;_ptr",
 get$addStream: function() {
  return this.operator$index$1("addstream");
},
 addStream$1: function(arg0) {
  return this.get$addStream().call$1(arg0);
},
 get$iceCandidate: function() {
  return this.operator$index$1("icecandidate");
},
 get$iceChange: function() {
  return this.operator$index$1("icechange");
},
 get$negotiationNeeded: function() {
  return this.operator$index$1("negotiationneeded");
},
 get$open: function() {
  return this.operator$index$1("open");
},
 get$removeStream: function() {
  return this.operator$index$1("removestream");
},
 get$stateChange: function() {
  return this.operator$index$1("statechange");
}
};

$$.WebSocketEvents = {"":"Events;_ptr",
 get$close: function() {
  return this.operator$index$1("close");
},
 close$0: function() {
  return this.get$close().call$0();
},
 close$2: function(arg0, arg1) {
  return this.get$close().call$2(arg0, arg1);
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$message: function() {
  return this.operator$index$1("message");
},
 get$open: function() {
  return this.operator$index$1("open");
}
};

$$._DOMWindowCrossFrame = {"":"Object;_window",
 close$0: function() {
  return this._window.close();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
}
};

$$.FixedSizeListIterator = {"":"_VariableSizeListIterator;_liblib$_length,_array,_pos",
 get$hasNext: function() {
  return $.gt(this._liblib$_length, this._pos);
}
};

$$._VariableSizeListIterator = {"":"Object;",
 get$hasNext: function() {
  var t1 = this._array;
  return $.gt($.getInterceptor$JSStringJSArray(t1).get$length(t1), this._pos);
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = this._pos;
  if (typeof t3 !== 'number')
    return this.next$0$bailout(2, t3, t1);
  this._pos = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.get$hasNext() !== true)
        throw $.$$throw($.StateError$("No more elements"));
      t1 = this._array;
    case 1:
      state0 = 0;
      t3 = this._pos;
    case 2:
      var t1, t3;
      state0 = 0;
      this._pos = $.add(t3, 1);
      return $.index(t1, t3);
  }
}
};

$$.FilteredElementList = {"":"Object;_node,_childNodes",
 get$_filtered: function() {
  var t1 = this._childNodes;
  return $.List_List$from($.getInterceptor$JSArray(t1).filter$1(t1, new $.FilteredElementList__filtered_anon()));
},
 forEach$1: function(f) {
  var t1 = this.get$_filtered();
  $.getInterceptor$JSArray(t1).forEach$1(t1, f);
},
 operator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
},
 set$length: function(newLength) {
  var len = $.getInterceptor$JSStringJSArray(this).get$length(this);
  if ($.geB(newLength, len))
    return;
  else if ($.ltB(newLength, 0))
    throw $.$$throw($.ArgumentError$("Invalid list length"));
  this.removeRange$2(newLength, $.sub(len, newLength));
},
 add$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).add$1(t1, value);
},
 addLast$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).add$1(t1, value);
},
 contains$1: function(element) {
  var t1, t2;
  if (typeof element === 'object' && element !== null && element.is$Element()) {
    t1 = this._childNodes;
    t2 = $.getInterceptor$JSStringJSArray(t1).contains$1(t1, element) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
},
 removeRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  t1 = $.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength);
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.FilteredElementList_removeRange_anon());
},
 clear$0: function() {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).clear$0(t1);
},
 removeLast$0: function() {
  var result = $.getInterceptor$JSArray(this).get$last(this);
  if (!(result == null))
    result.remove$0();
  return result;
},
 removeAt$1: function(index) {
  var result = this.operator$index$1(index);
  result.remove$0();
  return result;
},
 filter$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).filter$1(t1, f);
},
 get$isEmpty: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this.get$_filtered(), index);
},
 iterator$0: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 getRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength);
},
 indexOf$2: function(element, start) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).indexOf$2(t1, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).get$last(t1);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.JsonUnsupportedObjectError = {"":"Object;unsupportedObject,cause",
 toString$0: function() {
  if (!(this.cause == null))
    return "Calling toJson method on object failed.";
  else
    return "Object toJson method returns non-serializable value.";
}
};

$$._JsonParser = {"":"Object;json,length>,position<",
 parseToplevel$0: function() {
  var result = this.parseValue$0();
  if (!(this.token$0() == null))
    this.error$1("Junk at the end of JSON input");
  return result;
},
 parseValue$0: function() {
  var token = this.token$0();
  if (token == null)
    this.error$1("Nothing to parse");
  switch (token) {
    case 34:
      return this.parseString$0();
    case 45:
      return this.parseNumber$0();
    case 110:
      return this.expectKeyword$2("null", null);
    case 102:
      return this.expectKeyword$2("false", false);
    case 116:
      return this.expectKeyword$2("true", true);
    case 123:
      return this.parseObject$0();
    case 91:
      return this.parseList$0();
    default:
      this.error$1("Unexpected token");
  }
},
 expectKeyword$2: function(word, value) {
  var i;
  for (i = 0; i < word.length; ++i) {
    if (!$.eqB(this.char$0(), $.CONSTANT5.charCodeAt$1(word, i)))
      this.error$1("Expected keyword '" + word + "'");
    this.position = $.add(this.position, 1);
  }
  return value;
},
 parseObject$0: function() {
  var object, key, t1;
  object = $.makeLiteralMap([]);
  if (typeof object !== 'object' || object === null || (object.constructor !== Array || !!object.immutable$list) && !object.is$JavaScriptIndexingBehavior())
    return this.parseObject$0$bailout(1, object);
  this.position = $.add(this.position, 1);
  if (!$.eqB(this.token$0(), 125)) {
    for (; true;) {
      key = this.parseString$0();
      if (!$.eqB(this.token$0(), 58))
        this.error$1("Expected ':' when parsing object");
      this.position = $.add(this.position, 1);
      t1 = this.parseValue$0();
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= object.length)
        throw $.ioore(key);
      object[key] = t1;
      if (!$.eqB(this.token$0(), 44))
        break;
      this.position = $.add(this.position, 1);
    }
    if (!$.eqB(this.token$0(), 125))
      this.error$1("Expected '}' at end of object");
  }
  this.position = $.add(this.position, 1);
  return object;
},
 parseObject$0$bailout: function(state0, object) {
  var key;
  this.position = $.add(this.position, 1);
  if (!$.eqB(this.token$0(), 125)) {
    for (; true;) {
      key = this.parseString$0();
      if (!$.eqB(this.token$0(), 58))
        this.error$1("Expected ':' when parsing object");
      this.position = $.add(this.position, 1);
      $.indexSet(object, key, this.parseValue$0());
      if (!$.eqB(this.token$0(), 44))
        break;
      this.position = $.add(this.position, 1);
    }
    if (!$.eqB(this.token$0(), 125))
      this.error$1("Expected '}' at end of object");
  }
  this.position = $.add(this.position, 1);
  return object;
},
 parseList$0: function() {
  var list = [];
  this.position = $.add(this.position, 1);
  if (!$.eqB(this.token$0(), 93)) {
    for (; true;) {
      list.push(this.parseValue$0());
      if (!$.eqB(this.token$0(), 44))
        break;
      this.position = $.add(this.position, 1);
    }
    if (!$.eqB(this.token$0(), 93))
      this.error$1("Expected ']' at end of list");
  }
  this.position = $.add(this.position, 1);
  return list;
},
 parseString$0: function(exception) {
  var charCodes, t1, t2, t3, c, codeString;
  if (!$.eqB(this.token$0(), 34))
    this.error$1("Expected string literal");
  this.position = $.add(this.position, 1);
  charCodes = $.List_List(null);
  for (t1 = this.length, t2 = this.json, t3 = $.getInterceptor$JSString(t2); true;) {
    c = this.char$0();
    if ($.eqB(c, 34)) {
      this.position = $.add(this.position, 1);
      break;
    }
    if ($.eqB(c, 92)) {
      this.position = $.add(this.position, 1);
      if ($.eqB(this.position, t1))
        this.error$1("\\ at the end of input");
      switch (this.char$0()) {
        case 34:
          c = 34;
          break;
        case 92:
          c = 92;
          break;
        case 47:
          c = 47;
          break;
        case 98:
          c = 8;
          break;
        case 110:
          c = 10;
          break;
        case 114:
          c = 13;
          break;
        case 102:
          c = 12;
          break;
        case 116:
          c = 9;
          break;
        case 117:
          if ($.gtB($.add(this.position, 5), t1))
            this.error$1("Invalid unicode esacape sequence");
          codeString = t3.substring$2(t2, $.add(this.position, 1), $.add(this.position, 5));
          try {
            c = $.int_parse("0x" + $.S(codeString));
          } catch (exception) {
            $.unwrapException(exception);
            this.error$1("Invalid unicode esacape sequence");
          }

          this.position = $.add(this.position, 4);
          break;
        default:
          this.error$1("Invalid esacape sequence in string literal");
      }
    }
    charCodes.push(c);
    this.position = $.add(this.position, 1);
  }
  return $.String_String$fromCharCodes(charCodes);
},
 parseNumber$0: function() {
  var startPos, char$, isInt, t1, number;
  if (!$.eqB(this.token$0(), 45))
    this.error$1("Expected number literal");
  startPos = this.position;
  char$ = this.char$0();
  if (char$ === 45)
    char$ = this.nextChar$0();
  if (char$ === 48)
    char$ = this.nextChar$0();
  else if ($.geB(char$, 48) && $.leB(char$, 57)) {
    char$ = this.nextChar$0();
    if (typeof char$ !== 'number')
      return this.parseNumber$0$bailout(1, startPos, char$);
    while (true) {
      if (!($.geB(char$, 48) && $.leB(char$, 57)))
        break;
      char$ = this.nextChar$0();
    }
  } else
    this.error$1("Expected digit when parsing number");
  if (char$ === 46) {
    char$ = this.nextChar$0();
    if ($.geB(char$, 48) && $.leB(char$, 57)) {
      char$ = this.nextChar$0();
      if (typeof char$ !== 'number')
        return this.parseNumber$0$bailout(2, startPos, char$);
      while (true) {
        if (!($.geB(char$, 48) && $.leB(char$, 57)))
          break;
        char$ = this.nextChar$0();
      }
      isInt = false;
    } else {
      this.error$1("Expected digit following comma");
      isInt = true;
    }
  } else
    isInt = true;
  if (char$ === 101 || char$ === 69) {
    char$ = this.nextChar$0();
    if (char$ === 45 || char$ === 43)
      char$ = this.nextChar$0();
    if ($.geB(char$, 48) && $.leB(char$, 57)) {
      char$ = this.nextChar$0();
      if (typeof char$ !== 'number')
        return this.parseNumber$0$bailout(3, char$, startPos);
      while (true) {
        if (!($.geB(char$, 48) && $.leB(char$, 57)))
          break;
        char$ = this.nextChar$0();
      }
      isInt = false;
    } else
      this.error$1("Expected digit following 'e' or 'E'");
  }
  t1 = this.json;
  number = $.getInterceptor$JSString(t1).substring$2(t1, startPos, this.position);
  if (isInt)
    return $.int_parse(number);
  else
    return $.double_parse(number);
},
 parseNumber$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      char$ = env1;
      startPos = env0;
      break;
    case 2:
      char$ = env1;
      startPos = env0;
      break;
    case 3:
      startPos = env1;
      char$ = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (!$.eqB(this.token$0(), 45))
        this.error$1("Expected number literal");
      startPos = this.position;
      char$ = this.char$0();
      if (char$ === 45)
        char$ = this.nextChar$0();
    case 1:
      if (state0 === 0 && char$ === 48)
        char$ = this.nextChar$0();
      else
        switch (state0) {
          case 0:
          case 1:
            if (state0 === 1 || state0 === 0 && $.geB(char$, 48) && $.leB(char$, 57))
              switch (state0) {
                case 0:
                  char$ = this.nextChar$0();
                case 1:
                  state0 = 0;
                  while (true) {
                    if (!($.geB(char$, 48) && $.leB(char$, 57)))
                      break;
                    char$ = this.nextChar$0();
                  }
              }
            else
              this.error$1("Expected digit when parsing number");
        }
    case 2:
      if (state0 === 2 || state0 === 0 && char$ === 46)
        switch (state0) {
          case 0:
            char$ = this.nextChar$0();
          case 2:
            if (state0 === 2 || state0 === 0 && $.geB(char$, 48) && $.leB(char$, 57))
              switch (state0) {
                case 0:
                  char$ = this.nextChar$0();
                case 2:
                  state0 = 0;
                  while (true) {
                    if (!($.geB(char$, 48) && $.leB(char$, 57)))
                      break;
                    char$ = this.nextChar$0();
                  }
                  isInt = false;
              }
            else {
              this.error$1("Expected digit following comma");
              isInt = true;
            }
        }
      else
        isInt = true;
    case 3:
      var startPos, char$, isInt, t1, number;
      if (state0 === 3 || state0 === 0 && (char$ === 101 || char$ === 69))
        switch (state0) {
          case 0:
            char$ = this.nextChar$0();
            if (char$ === 45 || char$ === 43)
              char$ = this.nextChar$0();
          case 3:
            if (state0 === 3 || state0 === 0 && $.geB(char$, 48) && $.leB(char$, 57))
              switch (state0) {
                case 0:
                  char$ = this.nextChar$0();
                case 3:
                  state0 = 0;
                  while (true) {
                    if (!($.geB(char$, 48) && $.leB(char$, 57)))
                      break;
                    char$ = this.nextChar$0();
                  }
                  isInt = false;
              }
            else
              this.error$1("Expected digit following 'e' or 'E'");
        }
      t1 = this.json;
      number = $.getInterceptor$JSString(t1).substring$2(t1, startPos, this.position);
      if (isInt)
        return $.int_parse(number);
      else
        return $.double_parse(number);
  }
},
 char$0: function() {
  var t1, t3;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.char$0$bailout(1, t1);
  t3 = this.length;
  if (typeof t3 !== 'number')
    return this.char$0$bailout(2, t1, t3);
  if (t1 >= t3)
    this.error$1("Unexpected end of JSON stream");
  t1 = this.json;
  return $.getInterceptor$JSString(t1).charCodeAt$1(t1, this.position);
},
 char$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.position;
    case 1:
      state0 = 0;
      t3 = this.length;
    case 2:
      var t1, t3;
      state0 = 0;
      if ($.geB(t1, t3))
        this.error$1("Unexpected end of JSON stream");
      t1 = this.json;
      return $.getInterceptor$JSString(t1).charCodeAt$1(t1, this.position);
  }
},
 nextChar$0: function() {
  var t1, t3, t2;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.nextChar$0$bailout(1, t1);
  this.position = t1 + 1;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.nextChar$0$bailout(2, t1);
  t3 = this.length;
  if (typeof t3 !== 'number')
    return this.nextChar$0$bailout(3, t1, t3);
  if (t1 >= t3)
    return 0;
  t2 = this.json;
  return $.getInterceptor$JSString(t2).charCodeAt$1(t2, t1);
},
 nextChar$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.position;
    case 1:
      state0 = 0;
      this.position = $.add(t1, 1);
      t1 = this.position;
    case 2:
      state0 = 0;
      t3 = this.length;
    case 3:
      var t1, t3;
      state0 = 0;
      if ($.geB(t1, t3))
        return 0;
      t1 = this.json;
      return $.getInterceptor$JSString(t1).charCodeAt$1(t1, this.position);
  }
},
 token$0: function() {
  var t1, t2, t3, t4, char$, token;
  t1 = this.json;
  t2 = $.getInterceptor$JSString(t1);
  t3 = this.length;
  if (typeof t3 !== 'number')
    return this.token$0$bailout(1, t2, t3, t1);
  for (; true;) {
    t4 = this.position;
    if (typeof t4 !== 'number')
      return this.token$0$bailout(2, t4, t2, t3, t1);
    if (t4 >= t3)
      return;
    char$ = t2.charCodeAt$1(t1, t4);
    t4 = $._JsonParser_tokens;
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.token$0$bailout(3, t2, t3, char$, t1, t4);
    if (char$ !== (char$ | 0))
      throw $.iae(char$);
    if (char$ < 0 || char$ >= t4.length)
      throw $.ioore(char$);
    token = t4[char$];
    if (token === 32) {
      t4 = this.position;
      if (typeof t4 !== 'number')
        return this.token$0$bailout(4, t2, t3, t1, t4);
      this.position = t4 + 1;
      continue;
    }
    if (token == null)
      return 0;
    return token;
  }
},
 token$0$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      t1 = env2;
      t3 = env1;
      t2 = env0;
      break;
    case 2:
      t1 = env3;
      t3 = env2;
      t2 = env1;
      t4 = env0;
      break;
    case 3:
      t4 = env4;
      t1 = env3;
      char$ = env2;
      t3 = env1;
      t2 = env0;
      break;
    case 4:
      t4 = env3;
      t1 = env2;
      t3 = env1;
      t2 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.json;
      t2 = $.getInterceptor$JSString(t1);
      t3 = this.length;
    case 1:
      state0 = 0;
    default:
      var t1, t2, t3, t4, char$, token;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
            default:
              c$0: {
                switch (state0) {
                  case 0:
                    t4 = this.position;
                  case 2:
                    state0 = 0;
                    if ($.geB(t4, t3))
                      return;
                    char$ = t2.charCodeAt$1(t1, this.position);
                    t4 = $._JsonParser_tokens;
                  case 3:
                    state0 = 0;
                    token = $.index(t4, char$);
                  case 4:
                    if (state0 === 4 || state0 === 0 && token === 32)
                      switch (state0) {
                        case 0:
                          t4 = this.position;
                        case 4:
                          state0 = 0;
                          this.position = $.add(t4, 1);
                          break c$0;
                      }
                    if (token == null)
                      return 0;
                    return token;
                }
              }
          }
  }
},
 error$1: function(message) {
  throw $.$$throw(message);
},
 get$error: function() {
  return new $.BoundClosure(this, 'error$1');
},
 _JsonParser$1: function(json) {
  if (!($._JsonParser_tokens == null))
    return;
  $._JsonParser_tokens = $.List_List(126);
  $.indexSet($._JsonParser_tokens, 9, 32);
  $.indexSet($._JsonParser_tokens, 10, 32);
  $.indexSet($._JsonParser_tokens, 13, 32);
  $.indexSet($._JsonParser_tokens, 32, 32);
  $.indexSet($._JsonParser_tokens, 48, 45);
  $.indexSet($._JsonParser_tokens, 49, 45);
  $.indexSet($._JsonParser_tokens, 50, 45);
  $.indexSet($._JsonParser_tokens, 51, 45);
  $.indexSet($._JsonParser_tokens, 52, 45);
  $.indexSet($._JsonParser_tokens, 53, 45);
  $.indexSet($._JsonParser_tokens, 54, 45);
  $.indexSet($._JsonParser_tokens, 55, 45);
  $.indexSet($._JsonParser_tokens, 56, 45);
  $.indexSet($._JsonParser_tokens, 57, 45);
  $.indexSet($._JsonParser_tokens, 45, 45);
  $.indexSet($._JsonParser_tokens, 123, 123);
  $.indexSet($._JsonParser_tokens, 125, 125);
  $.indexSet($._JsonParser_tokens, 91, 91);
  $.indexSet($._JsonParser_tokens, 93, 93);
  $.indexSet($._JsonParser_tokens, 34, 34);
  $.indexSet($._JsonParser_tokens, 58, 58);
  $.indexSet($._JsonParser_tokens, 44, 44);
  $.indexSet($._JsonParser_tokens, 110, 110);
  $.indexSet($._JsonParser_tokens, 116, 116);
  $.indexSet($._JsonParser_tokens, 102, 102);
}
};

$$._JsonStringifier = {"":"Object;sb>,seen",
 checkCycle$1: function(object) {
  var t1, t2, i, t3;
  for (t1 = this.seen, t2 = t1.length, i = 0; i < t2; ++i) {
    t3 = t1[i];
    if (t3 == null ? object == null : t3 === object)
      throw $.$$throw("Cyclic structure");
  }
  t1.push(object);
},
 stringifyValue$1: function(object, exception) {
  var customJson, t1, e;
  if (this.stringifyJsonValue$1(object) !== true) {
    this.checkCycle$1(object);
    try {
      customJson = object.toJson$0();
      if (this.stringifyJsonValue$1(customJson) !== true)
        throw $.$$throw($.JsonUnsupportedObjectError$(object));
      t1 = this.seen;
      if (0 >= t1.length)
        throw $.ioore(0);
      t1.pop();
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      throw $.$$throw($.JsonUnsupportedObjectError$withCause(object, e));
    }

  }
},
 stringifyJsonValue$1: function(object) {
  var t1, t2, t3, i;
  t1 = {};
  if (typeof object === 'number') {
    t1 = this.sb;
    $.getInterceptor$JSArray(t1).add$1(t1, $.CONSTANT1.toString$0(object));
    return true;
  } else if (object === true) {
    t1 = this.sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "true");
    return true;
  } else if (object === false) {
    t1 = this.sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "false");
    return true;
  } else if (object == null) {
    t1 = this.sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "null");
    return true;
  } else if (typeof object === 'string') {
    t1 = this.sb;
    t2 = $.getInterceptor$JSArray(t1);
    t2.add$1(t1, "\"");
    $._JsonStringifier_escape(t1, object);
    t2.add$1(t1, "\"");
    return true;
  } else if (typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List())) {
    if (typeof object !== 'object' || object === null || object.constructor !== Array && !object.is$JavaScriptIndexingBehavior())
      return this.stringifyJsonValue$1$bailout(1, object);
    this.checkCycle$1(object);
    t2 = this.sb;
    t3 = $.getInterceptor$JSArray(t2);
    t3.add$1(t2, "[");
    if (object.length > 0) {
      this.stringifyValue$1(object[0]);
      for (i = 1; i < object.length; ++i) {
        t3.add$1(t2, ",");
        if (i >= object.length)
          throw $.ioore(i);
        this.stringifyValue$1(object[i]);
      }
    }
    t3.add$1(t2, "]");
    t1 = this.seen;
    if (0 >= t1.length)
      throw $.ioore(0);
    t1.pop();
    return true;
  } else if (typeof object === 'object' && object !== null && object.is$Map()) {
    this.checkCycle$1(object);
    t2 = this.sb;
    t3 = $.getInterceptor$JSArray(t2);
    t3.add$1(t2, "{");
    t1.first_0 = true;
    object.forEach$1(new $._JsonStringifier_stringifyJsonValue_anon(t1, this));
    t3.add$1(t2, "}");
    t2 = this.seen;
    if (0 >= t2.length)
      throw $.ioore(0);
    t2.pop();
    return true;
  } else
    return false;
},
 stringifyJsonValue$1$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      object = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
    case 1:
      var t1, t2, object, t3, i;
      if (state0 === 0 && typeof object === 'number') {
        t1 = this.sb;
        $.getInterceptor$JSArray(t1).add$1(t1, $.CONSTANT1.toString$0(object));
        return true;
      } else
        switch (state0) {
          case 0:
          case 1:
            if (state0 === 0 && object === true) {
              t1 = this.sb;
              $.getInterceptor$JSArray(t1).add$1(t1, "true");
              return true;
            } else
              switch (state0) {
                case 0:
                case 1:
                  if (state0 === 0 && object === false) {
                    t1 = this.sb;
                    $.getInterceptor$JSArray(t1).add$1(t1, "false");
                    return true;
                  } else
                    switch (state0) {
                      case 0:
                      case 1:
                        if (state0 === 0 && object == null) {
                          t1 = this.sb;
                          $.getInterceptor$JSArray(t1).add$1(t1, "null");
                          return true;
                        } else
                          switch (state0) {
                            case 0:
                            case 1:
                              if (state0 === 0 && typeof object === 'string') {
                                t1 = this.sb;
                                t2 = $.getInterceptor$JSArray(t1);
                                t2.add$1(t1, "\"");
                                $._JsonStringifier_escape(t1, object);
                                t2.add$1(t1, "\"");
                                return true;
                              } else
                                switch (state0) {
                                  case 0:
                                  case 1:
                                    if (state0 === 1 || state0 === 0 && typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List()))
                                      switch (state0) {
                                        case 0:
                                        case 1:
                                          state0 = 0;
                                          this.checkCycle$1(object);
                                          t2 = this.sb;
                                          t3 = $.getInterceptor$JSArray(t2);
                                          t3.add$1(t2, "[");
                                          t1 = $.getInterceptor$JSStringJSArray(object);
                                          if ($.gtB(t1.get$length(object), 0)) {
                                            this.stringifyValue$1($.index(object, 0));
                                            for (i = 1; $.ltB(i, t1.get$length(object)); ++i) {
                                              t3.add$1(t2, ",");
                                              this.stringifyValue$1($.index(object, i));
                                            }
                                          }
                                          t3.add$1(t2, "]");
                                          t1 = this.seen;
                                          if (0 >= t1.length)
                                            throw $.ioore(0);
                                          t1.pop();
                                          return true;
                                      }
                                    else if (typeof object === 'object' && object !== null && object.is$Map()) {
                                      this.checkCycle$1(object);
                                      t2 = this.sb;
                                      t3 = $.getInterceptor$JSArray(t2);
                                      t3.add$1(t2, "{");
                                      t1.first_0 = true;
                                      object.forEach$1(new $._JsonStringifier_stringifyJsonValue_anon(t1, this));
                                      t3.add$1(t2, "}");
                                      t2 = this.seen;
                                      if (0 >= t2.length)
                                        throw $.ioore(0);
                                      t2.pop();
                                      return true;
                                    } else
                                      return false;
                                }
                          }
                    }
              }
        }
  }
}
};

$$.Logger = {"":"Object;_logLevel",
 Debug$1: function(message) {
  this._log$2($.CONSTANT4, message);
},
 Error$1: function(message) {
  this._log$2($.CONSTANT6, message);
},
 Info$1: function(message) {
  this._log$2($.CONSTANT7, message);
},
 Warning$1: function(message) {
  this._log$2($.CONSTANT8, message);
},
 _log$2: function(level, message) {
  if (level.operator$le$1(this._logLevel))
    $.print("[" + $.S($.Date_Date$now()) + "] [" + $.S(level._type) + "] " + $.S(message));
},
 Logger$_internal$0: function() {
  this._logLevel = $.CONSTANT4;
}
};

$$.LogLevel = {"":"Object;_level>,_type",
 operator$lt$1: function(o) {
  return $.lt(this._level, o.get$_level());
},
 operator$le$1: function(o) {
  return $.le(this._level, o.get$_level());
}
};

$$.Notifier = {"":"Object;_elementId,_parentId,_parent,_liblib0$_element>,_text>,_width,_height,_id,_interval,_timeout,_visible,_messages>",
 get$element: function() {
  return this._liblib0$_element;
},
 setParent$1: function(id) {
  var t1;
  this._parentId = id;
  this._parent = $.query(id);
  t1 = this._parent.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this._liblib0$_element);
  this.setInitialStyle$0();
},
 setInitialStyle$0: function() {
  var t1, t2;
  this.hide$0();
  this._liblib0$_element.get$style().set$background("#00CCFF");
  this._liblib0$_element.get$style().set$zIndex("9999");
  t1 = this._height;
  t2 = $.S($.CONSTANT2.toString$0(t1)) + "px";
  this._liblib0$_element.get$style().set$height(t2);
  this._liblib0$_element.get$style().set$border("1px solid #000");
  this._liblib0$_element.get$style().set$position("absolute");
  this._liblib0$_element.get$style().set$left("0px");
  this._liblib0$_element.get$style().set$top("0px");
  t2 = $.S(this._parent.get$clientWidth()) + "px";
  this._liblib0$_element.get$style().set$width(t2);
  t2 = $.S($.CONSTANT2.toString$0(t1)) + "px";
  this._liblib0$_element.get$style().set$height(t2);
  this._liblib0$_element.get$style().set$boxShadow("0 0 5px 5px #ccc");
  this._liblib0$_element.get$style().set$padding("10px");
  this._liblib0$_element.get$style().set$textAlign("center");
  this._text = $.HeadingElement_HeadingElement$h2();
  t2 = this._liblib0$_element.get$children();
  $.getInterceptor$JSArray(t2).add$1(t2, this._text);
},
 popup$0: function() {
  var t1, t2;
  t1 = {};
  this._visible = true;
  this._liblib0$_element.get$style().set$display("block");
  t1.m_0 = $.CONSTANT0.removeAt$1(this._messages, 0);
  t2 = t1.m_0.get$message();
  this._text.set$text(t2);
  t2 = t1.m_0;
  if (!(t2.get$callback() == null))
    t2.callback$0();
  t1.i_1 = 0;
  this._id = $.window().setInterval$2(new $.Notifier_popup_anon(t1, this), this._interval);
},
 hide$0: function() {
  if (!(this._id == null)) {
    $.window().clearInterval$1(this._id);
    this._id = null;
  }
  this._visible = false;
  this._liblib0$_element.get$style().set$display("none");
},
 display$2: function(message, callback) {
  $.CONSTANT0.addLast$1(this._messages, $.Message$(message, callback));
  if (!this._visible)
    this.popup$0();
},
 display$1: function(message) {
  return this.display$2(message, null);
},
 Notifier$_internal$0: function(exception) {
  var e, t1;
  e = null;
  try {
    e = $.query(this._elementId);
  } catch (exception) {
    $.unwrapException(exception);
  }

  if (e == null) {
    e = $.DivElement_DivElement();
    t1 = this._elementId;
    e.set$id(t1);
  }
  this._liblib0$_element = e;
  this._messages = $.List_List(null);
}
};

$$.Message = {"":"Object;message>,callback>",
 callback$0: function() {
  return this.callback.call$0();
}
};

$$.WheelSignalHandler = {"":"SignalHandler;other,_aux,_test,_liblib3$_log,_ws,_peerManager,_liblib3$_id,_dataChannelsEnabled,_methodHandlers,_listeners",
 onIdExistingChannelUser$1: function(p) {
  if (!$.eqB(p.get$id(), this.get$id()))
    this.other = p.get$id();
},
 get$onIdExistingChannelUser: function() {
  return new $.BoundClosure(this, 'onIdExistingChannelUser$1');
},
 onConnect$1: function(p) {
  $.print("Connected, my id is " + $.S(p.get$id()));
},
 get$onConnect: function() {
  return new $.BoundClosure(this, 'onConnect$1');
},
 onUserDisconnect$1: function(d) {
  var peer = this.getPeerManager$0().findWrapper$1(d.get$id());
  if (!(peer == null)) {
    peer.close$0();
    this.getPeerManager$0().remove$1(peer);
  }
},
 get$onUserDisconnect: function() {
  return new $.BoundClosure(this, 'onUserDisconnect$1');
},
 onUserMessage$1: function(m) {
  $.print("user message");
},
 get$onUserMessage: function() {
  return new $.BoundClosure(this, 'onUserMessage$1');
},
 handleJoin$1: function(join) {
  $.SignalHandler.prototype.handleJoin$1.call(this, join);
  this.get$peerManager().findWrapper$1(join.get$id()).addStream$1(this.get$peerManager().getLocalStream$0());
},
 get$handleJoin: function() {
  return new $.BoundClosure(this, 'handleJoin$1');
},
 handleId$1: function(id) {
  var t1;
  $.SignalHandler.prototype.handleId$1.call(this, id);
  t1 = id.get$id();
  if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) !== true)
    this.get$peerManager().findWrapper$1(id.get$id()).addStream$1(this.get$peerManager().getLocalStream$0());
},
 get$handleId: function() {
  return new $.BoundClosure(this, 'handleId$1');
},
 WheelSignalHandler$0: function() {
  this.registerHandler$2("connected", this.get$onConnect());
  this.registerHandler$2("disconnected", this.get$onUserDisconnect());
  this.registerHandler$2("id", this.get$onIdExistingChannelUser());
  this.registerHandler$2("usermessage", this.get$onUserMessage());
}
};

$$.PeerManager = {"":"Object;READYSTATE_CLOSED,READYSTATE_OPEN,log>,_dataChannelsEnabled,_ms,_peers,_listeners",
 subscribe$1: function(listener) {
  if ($.CONSTANT0.contains$1(this._listeners, listener) !== true)
    this._listeners.push(listener);
},
 setLocalStream$1: function(ms) {
  this._ms = ms;
  $.CONSTANT0.forEach$1(this._peers, new $.PeerManager_setLocalStream_anon(ms));
},
 getLocalStream$0: function() {
  return this._ms;
},
 createPeer$0: function() {
  var peer, wrapper, t1;
  peer = $.RtcPeerConnection_RtcPeerConnection({'iceServers': [{'url': 'stun:stun.l.google.com:19302'}]}, $);
  wrapper = this._dataChannelsEnabled ? $.DataPeerWrapper$(this, peer) : $.PeerWrapper$(this, peer);
  t1 = peer.get$on().get$addStream();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$onAddStream());
  t1 = peer.get$on().get$open();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$onOpen());
  t1 = peer.get$on().get$stateChange();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$onStateChanged());
  this._peers.push(wrapper);
  return wrapper;
},
 getWrapperForPeer$1: function(p) {
  var i, t1, wrapper;
  for (i = 0; t1 = this._peers, i < t1.length; ++i) {
    wrapper = t1[i];
    if ($.eqB(wrapper.get$peer(), p))
      return wrapper;
  }
  return;
},
 findWrapper$1: function(id) {
  var i, t1, wrapper;
  for (i = 0; t1 = this._peers, i < t1.length; ++i) {
    wrapper = t1[i];
    if ($.eqB(wrapper.get$id(), id))
      return wrapper;
  }
  return;
},
 onAddStream$1: function(e) {
  var wrapper, t1;
  this.log.Debug$1("PM: Adding peer");
  wrapper = this.getWrapperForPeer$1(e.get$target());
  t1 = $.CONSTANT0.filter$1(this._listeners, new $.PeerManager_onAddStream_anon());
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.PeerManager_onAddStream_anon0(this, wrapper, e));
},
 get$onAddStream: function() {
  return new $.BoundClosure(this, 'onAddStream$1');
},
 _sendPacket$1: function(p) {
  var t1 = $.CONSTANT0.filter$1(this._listeners, new $.PeerManager__sendPacket_anon());
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.PeerManager__sendPacket_anon0(p));
},
 closeAll$0: function() {
  var i, t1;
  for (i = 0; t1 = this._peers, i < t1.length; ++i)
    t1[i].close$0();
},
 remove$1: function(p) {
  p.close$0();
},
 onStateChanged$1: function(e) {
  var wrapper, t1, t2;
  wrapper = this.getWrapperForPeer$1(e.get$target());
  t1 = this.log;
  t1.Debug$1("onStateChanged: " + $.S(wrapper.get$peer().get$readyState()));
  if ($.eqB(wrapper.get$peer().get$readyState(), this.READYSTATE_CLOSED)) {
    wrapper.dispose$0();
    t2 = this._peers;
    $.CONSTANT0.removeAt$1(t2, $.CONSTANT0.indexOf$1(t2, wrapper));
    t1.Debug$1("Peer removed");
  }
},
 get$onStateChanged: function() {
  return new $.BoundClosure(this, 'onStateChanged$1');
},
 onOpen$1: function(e) {
  this.log.Debug$1("Peer connection is open");
},
 get$onOpen: function() {
  return new $.BoundClosure(this, 'onOpen$1');
},
 PeerManager$_internal$0: function() {
  this._peers = $.List_List(null);
  this._listeners = $.List_List(null);
}
};

$$.PeerWrapper = {"":"Object;READYSTATE_CLOSED,READYSTATE_OPEN,SDP_OFFER,SDP_ANSWER,_dataChannel,_peer,_manager,_isOpen<,_isHost<,log>,_liblib3$_id,_channelId,_listeners",
 get$id: function() {
  return this._liblib3$_id;
},
 get$channel: function() {
  return this._channelId;
},
 set$id: function(value) {
  this._liblib3$_id = value;
  return value;
},
 get$peer: function() {
  return this._peer;
},
 get$isHost: function() {
  return this._isHost;
},
 subscribe$1: function(listener) {
  var t1 = this._listeners;
  if ($.getInterceptor$JSStringJSArray(t1).contains$1(t1, listener) !== true) {
    t1 = this._listeners;
    $.getInterceptor$JSArray(t1).add$1(t1, listener);
  }
},
 setSessionDescription$1: function(sdp) {
  this.log.Debug$1("Creating local description");
  this._peer.setLocalDescription$3(sdp, this.get$_onLocalDescriptionSuccess(), this.get$_onRTCError());
},
 setRemoteSessionDescription$1: function(sdp) {
  this.log.Debug$1("Creating remote description " + $.S(sdp.get$type()) + " " + $.S(sdp.get$sdp()) + " ");
  this._peer.setRemoteDescription$3(sdp, this.get$_onRemoteDescriptionSuccess(), this.get$_onRTCError());
  if ($.eqB(sdp.get$type(), this.SDP_OFFER))
    this._sendAnswer$0();
},
 initialize$0: function() {
  if (this.get$isHost() === true)
    this._sendOffer$0();
},
 _sendOffer$0: function() {
  this._peer.createOffer$3(this.get$_onOfferSuccess(), this.get$_onRTCError(), null);
},
 _sendAnswer$0: function() {
  this._peer.createAnswer$3(this.get$_onAnswerSuccess(), this.get$_onRTCError(), null);
},
 addStream$1: function(ms) {
  if (ms == null)
    throw $.$$throw($.Exception_Exception("MediaStream was null"));
  this.log.Debug$1("Adding stream to peer " + $.S(this.get$id()));
  this._peer.addStream$1(ms);
},
 get$addStream: function() {
  return new $.BoundClosure(this, 'addStream$1');
},
 _onNegotiationNeeded$1: function(e) {
  this.log.Info$1("onNegotiationNeeded");
  if (this.get$isHost() === true)
    this._sendOffer$0();
},
 get$_onNegotiationNeeded: function() {
  return new $.BoundClosure(this, '_onNegotiationNeeded$1');
},
 _onOfferSuccess$1: function(sdp) {
  this.log.Debug$1("Offer created, sending");
  this.setSessionDescription$1(sdp);
  this._manager._sendPacket$1($.PacketFactory_get($.DescriptionPacket$With(sdp.get$sdp(), "offer", this._liblib3$_id, this._channelId)));
},
 get$_onOfferSuccess: function() {
  return new $.BoundClosure(this, '_onOfferSuccess$1');
},
 _onAnswerSuccess$1: function(sdp) {
  this.log.Debug$1("Answer created, sending");
  this.setSessionDescription$1(sdp);
  this._manager._sendPacket$1($.PacketFactory_get($.DescriptionPacket$With(sdp.get$sdp(), "answer", this._liblib3$_id, this._channelId)));
},
 get$_onAnswerSuccess: function() {
  return new $.BoundClosure(this, '_onAnswerSuccess$1');
},
 addRemoteIceCandidate$1: function(candidate) {
  if (candidate == null)
    throw $.$$throw($.Exception_Exception("RtcIceCandidate was null"));
  this.log.Debug$1("Receiving remote ICE Candidate " + $.S(candidate.get$candidate()));
  this._peer.addIceCandidate$1(candidate);
},
 _onIceCandidate$1: function(c) {
  var t1, t2, t3, ice;
  t1 = c.get$candidate();
  t2 = !(t1 == null);
  t3 = this.log;
  if (t2) {
    t3.Debug$1("Sending local ICE Candidate " + $.S(t1.get$candidate()));
    t2 = c.get$candidate();
    ice = $.ICEPacket$With(t2.get$candidate(), t2.get$sdpMid(), t2.get$sdpMLineIndex(), this.get$id(), this.get$channel());
    this._manager._sendPacket$1($.PacketFactory_get(ice));
  } else
    t3.Warning$1("Local ICE Candidate was null");
},
 get$_onIceCandidate: function() {
  return new $.BoundClosure(this, '_onIceCandidate$1');
},
 _onIceChange$1: function(c) {
  this.log.Debug$1("ICE Change " + $.S(c.get$candidate().get$candidate()));
},
 get$_onIceChange: function() {
  return new $.BoundClosure(this, '_onIceChange$1');
},
 _onRemoveStream$1: function(e) {
},
 get$_onRemoveStream: function() {
  return new $.BoundClosure(this, '_onRemoveStream$1');
},
 _onLocalDescriptionSuccess$0: function() {
},
 get$_onLocalDescriptionSuccess: function() {
  return new $.BoundClosure0(this, '_onLocalDescriptionSuccess$0');
},
 _onRemoteDescriptionSuccess$0: function() {
},
 get$_onRemoteDescriptionSuccess: function() {
  return new $.BoundClosure0(this, '_onRemoteDescriptionSuccess$0');
},
 _onRTCError$1: function(error) {
  this.log.Error$1(error);
},
 get$_onRTCError: function() {
  return new $.BoundClosure(this, '_onRTCError$1');
},
 close$0: function() {
  var t1, t2;
  t1 = this._peer;
  t2 = t1.get$readyState();
  if (typeof t2 !== 'string')
    return this.close$0$bailout0(1, t2);
  if (!(t2 === this.READYSTATE_CLOSED))
    t1.close$0();
},
 close$0$bailout0: function(state0, t1) {
  if (!$.eqB(t1, this.READYSTATE_CLOSED))
    this._peer.close$0();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 dispose$0: function() {
  if (!$.eqB(this._peer.get$readyState(), this.READYSTATE_CLOSED))
    this._peer.close$0();
  this._peer = null;
},
 PeerWrapper$2: function(pm, p) {
  var t1;
  this._peer = p;
  this._manager = pm;
  this._listeners = $.List_List(null);
  t1 = this._peer.get$on().get$iceCandidate();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$_onIceCandidate());
  t1 = this._peer.get$on().get$iceChange();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$_onIceChange());
  t1 = this._peer.get$on().get$removeStream();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$_onRemoveStream());
  t1 = this._peer.get$on().get$negotiationNeeded();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$_onNegotiationNeeded());
  t1 = this._peer.get$on().get$open();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.anon(this));
}
};

$$.DataPeerWrapper = {"":"PeerWrapper;_dataChannel,_liblib3$_log,_channelState,READYSTATE_CLOSED,READYSTATE_OPEN,SDP_OFFER,SDP_ANSWER,lib3$PeerWrapper$_dataChannel,_peer,_manager,_isOpen,_isHost,log,_liblib3$_id,_channelId,_listeners",
 _liblib3$_log$2: function(arg0, arg1) {
  return this._liblib3$_log.call$2(arg0, arg1);
},
 _onIceCandidate$1: function(c) {
  var t1;
  if (c.get$candidate() == null) {
    this._dataChannel = this._peer.createDataChannel$1("somelabelhere");
    t1 = this._dataChannel.get$on().get$close();
    $.getInterceptor$JSArray(t1).add$1(t1, this.get$onDataChannelClose());
    t1 = this._dataChannel.get$on().get$open();
    $.getInterceptor$JSArray(t1).add$1(t1, this.get$onDataChannelOpen());
    t1 = this._dataChannel.get$on().get$error();
    $.getInterceptor$JSArray(t1).add$1(t1, this.get$onDataChannelError());
    t1 = this._dataChannel.get$on().get$message();
    $.getInterceptor$JSArray(t1).add$1(t1, this.get$onDataChannelMessage());
  }
},
 get$_onIceCandidate: function() {
  return new $.BoundClosure(this, '_onIceCandidate$1');
},
 onDataChannelOpen$1: function(e) {
  var t1 = this._liblib3$_log;
  t1.Debug$1("DataChannelOpen " + $.S(e));
  t1.Debug$1("DataChannel readystate = " + $.S(this._dataChannel.get$readyState()));
  this._dataChannel.send$1("I HAS OPENED");
},
 get$onDataChannelOpen: function() {
  return new $.BoundClosure(this, 'onDataChannelOpen$1');
},
 onDataChannelClose$1: function(e) {
  var t1 = this._liblib3$_log;
  t1.Debug$1("DataChannelClose " + $.S(e));
  t1.Debug$1("DataChannel readystate = " + $.S(this._dataChannel.get$readyState()));
},
 get$onDataChannelClose: function() {
  return new $.BoundClosure(this, 'onDataChannelClose$1');
},
 onDataChannelMessage$1: function(e) {
  var t1 = this._liblib3$_log;
  t1.Debug$1("DataChannelMessage " + $.S(e));
  t1.Debug$1("DataChannel readystate = " + $.S(this._dataChannel.get$readyState()));
},
 get$onDataChannelMessage: function() {
  return new $.BoundClosure(this, 'onDataChannelMessage$1');
},
 onDataChannelError$1: function(e) {
  var t1 = this._liblib3$_log;
  t1.Debug$1("DataChannelError " + $.S(e));
  t1.Debug$1("DataChannel readystate = " + $.S(this._dataChannel.get$readyState()));
},
 get$onDataChannelError: function() {
  return new $.BoundClosure(this, 'onDataChannelError$1');
},
 DataPeerWrapper$2: function(pm, p) {
  var t1 = this._peer.get$on().get$iceCandidate();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$_onIceCandidate());
}
};

$$.SignalHandler = {"":"Object;",
 _liblib3$_log$2: function(arg0, arg1) {
  return this._liblib3$_log.call$2(arg0, arg1);
},
 get$peerManager: function() {
  return this.getPeerManager$0();
},
 get$id: function() {
  return this._liblib3$_id;
},
 registerHandler$2: function(type, handler) {
  var t1;
  if (this._methodHandlers.containsKey$1(type) !== true)
    $.indexSet(this._methodHandlers, type, $.List_List(null));
  t1 = $.index(this._methodHandlers, type);
  $.getInterceptor$JSArray(t1).add$1(t1, handler);
},
 getHandlers$1: function(type) {
  if (this._methodHandlers.containsKey$1(type) === true)
    return $.index(this._methodHandlers, type);
  return;
},
 initialize$1: function(host) {
  var t1 = $ === host;
  if (t1)
    host = null;
  t1 = !t1;
  if (this._peerManager == null)
    throw $.$$throw($.Exception_Exception("PeerManager is null"));
  this._ws = $.WebSocket_WebSocket(t1 ? host : $.get$WEBSOCKET_SERVER());
  t1 = this._ws.get$on().get$open();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$onOpen());
  t1 = this._ws.get$on().get$close();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$onClose());
  t1 = this._ws.get$on().get$error();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$onError());
  t1 = this._ws.get$on().get$message();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$_onMessage());
},
 initialize$0: function() {
  return this.initialize$1($);
},
 getPeerManager$0: function() {
  return this._peerManager;
},
 createPeerWrapper$0: function() {
  return this._peerManager.createPeer$0();
},
 onOpen$1: function(e) {
  this._liblib3$_log.Debug$1("WebSocket connection opened, sending HELO, " + $.S(this._ws.get$readyState()));
  this._ws.send$1($.PacketFactory_get($.HeloPacket$With("", "")));
},
 get$onOpen: function() {
  return new $.BoundClosure(this, 'onOpen$1');
},
 onClose$1: function(e) {
  var t1, t2;
  t1 = this._liblib3$_log;
  t2 = e.get$code();
  t1.Debug$1("Connection closed " + $.S($.getInterceptor(t2).toString$0(t2)) + " " + $.S(e.get$reason()));
},
 get$onClose: function() {
  return new $.BoundClosure(this, 'onClose$1');
},
 onError$1: function(e) {
  this._liblib3$_log.Error$1("Error " + $.S(e));
},
 get$onError: function() {
  return new $.BoundClosure(this, 'onError$1');
},
 _onMessage$1: function(e) {
  var p, t1, handlers;
  p = $.PacketFactory_getPacketFromString(e.get$data());
  t1 = p.get$packetType();
  if (t1 == null || $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true)
    return;
  handlers = this.getHandlers$1(p.get$packetType());
  if (!(handlers == null))
    for (t1 = $.getInterceptor$JSArray(handlers).iterator$0(handlers); t1.get$hasNext() === true;)
      t1.next$0().call$1(p);
  else
    this._liblib3$_log.Warning$1("Packet " + $.S(p.get$packetType()) + " has no handlers set");
},
 get$_onMessage: function() {
  return new $.BoundClosure(this, '_onMessage$1');
},
 send$1: function(p) {
  this._ws.send$1(p);
},
 onPacketToSend$1: function(p) {
  this.send$1(p);
},
 handleJoin$1: function(packet) {
  var p;
  this._liblib3$_log.Debug$1("JoinPacket channel " + $.S(packet.get$channelId()) + " user " + $.S(packet.get$id()));
  p = this.createPeerWrapper$0();
  p.set$id(packet.get$id());
  p.set$_isHost(true);
},
 get$handleJoin: function() {
  return new $.BoundClosure(this, 'handleJoin$1');
},
 handleId$1: function(id) {
  var t1, t2;
  this._liblib3$_log.Debug$1("ID packet: channel " + $.S(id.get$channelId()) + " user " + $.S(id.get$id()));
  if (!(id.get$id() == null)) {
    t1 = id.get$id();
    t2 = $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) !== true;
    t1 = t2;
  } else
    t1 = false;
  if (t1)
    this.createPeerWrapper$0().set$id(id.get$id());
},
 get$handleId: function() {
  return new $.BoundClosure(this, 'handleId$1');
},
 handleConnectionSuccess$1: function(p) {
  this._liblib3$_log.Debug$1("Connection successfull user " + $.S(p.get$id()));
  this._liblib3$_id = p.get$id();
},
 get$handleConnectionSuccess: function() {
  return new $.BoundClosure(this, 'handleConnectionSuccess$1');
},
 handleIce$1: function(p) {
  var candidate, peer;
  candidate = $.RtcIceCandidate_RtcIceCandidate({'candidate': p.get$candidate(), 'sdpMid': p.get$sdpMid(), 'sdpMLineIndex': p.get$sdpMLineIndex()});
  peer = this._peerManager.findWrapper$1(p.get$userId());
  if (!(peer == null))
    peer.addRemoteIceCandidate$1(candidate);
},
 get$handleIce: function() {
  return new $.BoundClosure(this, 'handleIce$1');
},
 handleDescription$1: function(p) {
  var t1, t, peer;
  t1 = this._liblib3$_log;
  t1.Debug$1("DescriptionPacket channel " + $.S(p.get$channelId()) + " user " + $.S(p.get$id()) + " sdp " + $.S(p.get$sdp()));
  t = $.RtcSessionDescription_RtcSessionDescription({'sdp': p.get$sdp(), 'type': p.get$type()});
  peer = this._peerManager.findWrapper$1(p.get$id());
  if (!(peer == null)) {
    t1.Debug$1("Setting remote description to peer");
    peer.setRemoteSessionDescription$1(t);
  } else
    t1.Debug$1("Peer not found with id " + $.S(p.get$id()));
},
 get$handleDescription: function() {
  return new $.BoundClosure(this, 'handleDescription$1');
},
 handlePing$1: function(p) {
  this._liblib3$_log.Debug$1("Received PING, answering with PONG");
  this._ws.send$1($.PacketFactory_get($.PongPacket$()));
},
 get$handlePing: function() {
  return new $.BoundClosure(this, 'handlePing$1');
},
 handleBye$1: function(p) {
  var peer = this._peerManager.findWrapper$1(p.get$id());
  if (!(peer == null))
    peer.close$0();
},
 get$handleBye: function() {
  return new $.BoundClosure(this, 'handleBye$1');
},
 close$0: function() {
  var t1, t2;
  t1 = this._ws;
  if (t1 == null)
    return;
  t2 = t1.get$readyState();
  if (typeof t2 !== 'number')
    return this.close$0$bailout(1, t2);
  if (!(t2 === 3)) {
    t1.send$1($.PacketFactory_get($.ByePacket$With(this._liblib3$_id)));
    this._ws.close$2(1000, "window unload");
  }
},
 close$0$bailout: function(state0, t1) {
  if (!$.eqB(t1, 3)) {
    this._ws.send$1($.PacketFactory_get($.ByePacket$With(this._liblib3$_id)));
    this._ws.close$2(1000, "window unload");
  }
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 SignalHandler$0: function() {
  this._peerManager = $.PeerManager_PeerManager();
  this._peerManager.subscribe$1(this);
  this._methodHandlers = $.Map_Map();
  this._listeners = $.Map_Map();
  this.registerHandler$2("ping", this.get$handlePing());
  this.registerHandler$2("ice", this.get$handleIce());
  this.registerHandler$2("desc", this.get$handleDescription());
  this.registerHandler$2("bye", this.get$handleBye());
  this.registerHandler$2("connected", this.get$handleConnectionSuccess());
  this.registerHandler$2("join", this.get$handleJoin());
  this.registerHandler$2("id", this.get$handleId());
},
 is$PeerPacketEventListener: true
};

$$.Packet = {"":"Object;packetType>",
 toString$0: function() {
  return $.JSON_stringify(this.toJson$0());
}
};

$$.InvalidPacketException = {"":"Object;msg,original",
 toString$0: function() {
  var t1 = this.msg;
  return t1 == null ? "InvalidPacketException" : t1;
}
};

$$.UserMessage = {"":"Object;packetType>,id=,message>",
 toJson$0: function() {
  return $.makeLiteralMap(["packetType", this.packetType, "id", this.id, "message", this.message]);
}
};

$$.HeloPacket = {"":"Object;packetType>,channelId>,id=",
 toJson$0: function() {
  return $.makeLiteralMap(["packetType", this.packetType, "channelId", this.channelId, "id", this.id]);
}
};

$$.DescriptionPacket = {"":"Object;packetType>,sdp>,id=,channelId>,type>",
 toJson$0: function() {
  return $.makeLiteralMap(["sdp", this.sdp, "type", this.type, "id", this.id, "packetType", this.packetType, "channelId", this.channelId]);
}
};

$$.ICEPacket = {"":"Object;candidate>,sdpMid>,sdpMLineIndex>,roomId,userId>,packetType>",
 toJson$0: function() {
  return $.makeLiteralMap(["candidate", this.candidate, "sdpMid", this.sdpMid, "sdpMLineIndex", this.sdpMLineIndex, "packetType", this.packetType, "userId", this.userId, "roomId", this.roomId]);
}
};

$$.ByePacket = {"":"Object;packetType>,id=",
 toJson$0: function() {
  return $.makeLiteralMap(["packetType", this.packetType, "uid", this.id]);
}
};

$$.JoinPacket = {"":"Object;packetType>,channelId>,id=",
 toJson$0: function() {
  return $.makeLiteralMap(["packetType", this.packetType, "channelId", this.channelId, "id", this.id]);
}
};

$$.IdPacket = {"":"Object;packetType>,channelId>,id=",
 toJson$0: function() {
  return $.makeLiteralMap(["packetType", this.packetType, "channelId", this.channelId, "id", this.id]);
}
};

$$.ConnectionSuccessPacket = {"":"Object;packetType>,id=",
 toJson$0: function() {
  return $.makeLiteralMap(["packetType", this.packetType, "id", this.id]);
}
};

$$.PingPacket = {"":"Object;packetType>,userId>",
 toJson$0: function() {
  return $.makeLiteralMap(["packetType", this.packetType, "userId", this.userId]);
}
};

$$.PongPacket = {"":"Object;packetType>",
 toJson$0: function() {
  return $.makeLiteralMap(["packetType", this.packetType]);
}
};

$$.RoutePacket = {"":"Object;packetType>,caller,target>,router",
 toJson$0: function() {
  return $.makeLiteralMap(["caller", this.caller, "target", this.target, "router", this.router, "packetType", this.packetType]);
}
};

$$.RandomUserPacket = {"":"Object;packetType>,id=",
 toJson$0: function() {
  return $.makeLiteralMap(["packetType", this.packetType, "id", this.id]);
}
};

$$.Disconnected = {"":"Packet;packetType>,id=,lib4$Packet$packetType",
 toJson$0: function() {
  return $.makeLiteralMap(["packetType", this.packetType, "id", this.id]);
}
};

$$.main_anon = {"":"Closure;q_0",
 call$1: function(e) {
  var w, containerWidth, t1;
  w = $.gtB($.document().get$documentElement().get$clientWidth(), 800) ? 800 : $.document().get$documentElement().get$clientWidth();
  containerWidth = $.sub(w, 20);
  t1 = $.S(containerWidth) + "px";
  $.query("#container").get$style().set$width(t1);
  t1 = $.S(containerWidth) + "px";
  $.query("#videocontainer").get$style().set$width(t1);
  t1 = $.S(containerWidth) + "px";
  $.query("#chatcontainer").get$style().set$width(t1);
  this.q_0.resize$0();
}
};

$$.main_anon0 = {"":"Closure;q_1",
 call$1: function(e) {
  this.q_1.close$0();
}
};

$$.main_anon1 = {"":"Closure;q_2",
 call$1: function(stream) {
  var t1 = this.q_2;
  t1.initialize$0();
  t1.setMainVideo$1(stream);
  $.PeerManager_PeerManager().setLocalStream$1(stream);
}
};

$$.main_anon2 = {"":"Closure;",
 call$1: function(e) {
  $.Logger_Logger().Error$1("failed to get userMedia");
}
};

$$.invokeClosure_anon = {"":"Closure;closure_0",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"":"Closure;arg1_1,closure_2",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"":"Closure;closure_3,arg1_4,arg2_5",
 call$0: function() {
  return this.closure_3.call$2(this.arg1_4, this.arg2_5);
}
};

$$.Maps__emitMap_anon = {"":"Closure;box_0,result_1,visiting_2",
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_0 !== true) {
    t2 = this.result_1;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t1.first_0 = false;
  t1 = this.result_1;
  t2 = this.visiting_2;
  $.Collections__emitObject(k, t1, t2);
  $.getInterceptor$JSArray(t1).add$1(t1, ": ");
  $.Collections__emitObject(v, t1, t2);
}
};

$$.convertDartToNative_Dictionary_anon = {"":"Closure;object_0",
 call$2: function(key, value) {
  this.object_0[key] = value;
}
};

$$._LinkedHashMapImpl_forEach_anon = {"":"Closure;f_0",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.DoubleLinkedQueue_length_anon = {"":"Closure;box_0",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_0 = $.add(t1.counter_0, 1);
}
};

$$._DateImpl_toString_fourDigits = {"":"Closure;",
 call$1: function(n) {
  var absN, sign;
  absN = $.getInterceptor$JSNumber(n).abs$0(n);
  sign = $.ltB(n, 0) ? "-" : "";
  if ($.geB(absN, 1000))
    return $.S(n);
  if ($.geB(absN, 100))
    return sign + "0" + $.S(absN);
  if ($.geB(absN, 10))
    return sign + "00" + $.S(absN);
  return sign + "000" + $.S(absN);
}
};

$$._DateImpl_toString_threeDigits = {"":"Closure;",
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.geB(n, 10))
    return "0" + $.S(n);
  return "00" + $.S(n);
}
};

$$._DateImpl_toString_twoDigits = {"":"Closure;",
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return "0" + $.S(n);
}
};

$$.Notifier_popup_anon = {"":"Closure;box_0,this_1",
 call$0: function() {
  var t1, t2, t3, t4;
  t1 = this.box_0;
  t1.i_1 = $.add(t1.i_1, 1);
  t2 = this.this_1;
  t3 = t2.get$_messages();
  if ($.gtB($.getInterceptor$JSStringJSArray(t3).get$length(t3), 0)) {
    t3 = t2.get$_messages();
    t1.m_0 = $.getInterceptor$JSArray(t3).removeAt$1(t3, 0);
    t4 = t1.m_0.get$message();
    t2.get$_text().set$text(t4);
    t3 = t1.m_0;
    if (!(t3.get$callback() == null))
      t3.callback$0();
  }
  if ($.geB(t1.i_1, 5)) {
    t1.i_1 = 0;
    t2.hide$0();
  }
}
};

$$.NoSuchMethodError_toString_anon = {"":"Closure;box_0",
 call$2: function(key, value) {
  var t1, t2;
  t1 = this.box_0;
  if ($.gtB(t1.i_1, 0)) {
    t2 = t1.sb_0;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, key);
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, ": ");
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, $.Error_safeToString(value));
  t1.i_1 = $.add(t1.i_1, 1);
}
};

$$._JsonStringifier_stringifyJsonValue_anon = {"":"Closure;box_0,this_1",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.box_0;
  t2 = t1.first_0 !== true;
  t3 = this.this_1;
  if (t2) {
    t2 = t3.get$sb();
    $.getInterceptor$JSArray(t2).add$1(t2, ",\"");
  } else {
    t2 = t3.get$sb();
    $.getInterceptor$JSArray(t2).add$1(t2, "\"");
  }
  t2 = this.this_1;
  $._JsonStringifier_escape(t2.get$sb(), key);
  t3 = t2.get$sb();
  $.getInterceptor$JSArray(t3).add$1(t3, "\":");
  t2.stringifyValue$1(value);
  t1.first_0 = false;
}
};

$$.PeerManager_onAddStream_anon = {"":"Closure;",
 call$1: function(l) {
  return typeof l === 'object' && l !== null && !!l.is$PeerMediaEventListener;
}
};

$$.PeerManager_onAddStream_anon0 = {"":"Closure;this_0,wrapper_1,e_2",
 call$1: function(l) {
  this.this_0.get$log().Debug$1("PM: notify class stream available");
  l.onRemoteMediaStreamAvailable$3(this.e_2.get$stream(), this.wrapper_1.get$id(), true);
}
};

$$.QuickHandler_onRemoteMediaStreamAvailable_anon = {"":"Closure;this_0",
 call$1: function(e) {
  var t1 = this.this_0;
  t1.set$_current(t1.get$_remote());
  t1.resizeLarge$1(t1.get$_current());
  t1.resizeSmall$1($.eqB(t1.get$_current(), t1.get$_remote()) ? t1.get$_local() : t1.get$_remote());
}
};

$$.anon = {"":"Closure;this_0",
 call$1: function(e) {
  this.this_0.set$_isOpen(true);
  return true;
}
};

$$.PeerManager__sendPacket_anon = {"":"Closure;",
 call$1: function(l) {
  return typeof l === 'object' && l !== null && !!l.is$PeerPacketEventListener;
}
};

$$.PeerManager__sendPacket_anon0 = {"":"Closure;p_0",
 call$1: function(l) {
  l.onPacketToSend$1(this.p_0);
}
};

$$._ChildrenElementList_filter_anon = {"":"Closure;output_0,f_1",
 call$1: function(element) {
  var t1;
  if (this.f_1.call$1(element) === true) {
    t1 = this.output_0;
    $.getInterceptor$JSArray(t1).add$1(t1, element);
  }
}
};

$$.FilteredElementList__filtered_anon = {"":"Closure;",
 call$1: function(n) {
  return typeof n === 'object' && n !== null && n.is$Element();
}
};

$$.FilteredElementList_removeRange_anon = {"":"Closure;",
 call$1: function(el) {
  return el.remove$0();
}
};

$$.PeerManager_setLocalStream_anon = {"":"Closure;ms_0",
 call$1: function(p) {
  p.addStream$1(this.ms_0);
}
};

$$.QuickHandler_setMainVideo_anon = {"":"Closure;this_0",
 call$1: function(e) {
  var t1 = this.this_0;
  t1.set$_current(t1.get$_local());
  t1.resizeLarge$1(t1.get$_current());
  t1.resizeSmall$1($.eqB(t1.get$_current(), t1.get$_remote()) ? t1.get$_local() : t1.get$_remote());
}
};

$$.convertNativeToDart_AcceptStructuredClone_findSlot = {"":"Closure;copies_0,values_1",
 call$1: function(value) {
  var t1, t3, length$, i, t2;
  t1 = this.values_1;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout0(1, value, t1);
  t3 = $.getInterceptor$JSStringJSArray(t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  t3.add$1(t1, value);
  t1 = this.copies_0;
  $.getInterceptor$JSArray(t1).add$1(t1, null);
  return length$;
},
 call$1$bailout0: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      value = env0;
      break;
    case 2:
      length$ = env2;
      t1 = env1;
      value = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.values_1;
    case 1:
      state0 = 0;
      length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    case 2:
      var t1, value, length$, i, t2;
      state0 = 0;
      for (i = 0; $.ltB(i, length$); ++i) {
        t2 = $.index(t1, i);
        if (t2 == null ? value == null : t2 === value)
          return i;
      }
      $.getInterceptor$JSArray(t1).add$1(t1, value);
      t1 = this.copies_0;
      $.getInterceptor$JSArray(t1).add$1(t1, null);
      return length$;
  }
}
};

$$.convertNativeToDart_AcceptStructuredClone_readSlot = {"":"Closure;copies_2",
 call$1: function(i) {
  return $.index(this.copies_2, i);
}
};

$$.convertNativeToDart_AcceptStructuredClone_writeSlot = {"":"Closure;copies_3",
 call$2: function(i, x) {
  $.indexSet(this.copies_3, i, x);
}
};

$$.convertNativeToDart_AcceptStructuredClone_walk = {"":"Closure;findSlot_4,readSlot_5,writeSlot_6,mustCopy_7",
 call$1: function(e) {
  var slot, copy, t1, t2, t3, length$, i;
  if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
    return this.call$1$bailout(1, e);
  if (e instanceof Date)
    throw $.$$throw($.UnimplementedError$("structured clone of Date"));
  if (e instanceof RegExp)
    throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
  if (Object.getPrototypeOf(e) === Object.prototype) {
    slot = this.findSlot_4.call$1(e);
    copy = this.readSlot_5.call$1(slot);
    if (!(copy == null))
      return copy;
    copy = $.makeLiteralMap([]);
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(2, e, copy, slot);
    this.writeSlot_6.call$2(slot, copy);
    for (t1 = $.CONSTANT0.iterator$0(Object.keys(e)); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      t3 = this.call$1(e[t2]);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= copy.length)
        throw $.ioore(t2);
      copy[t2] = t3;
    }
    return copy;
  }
  if (e instanceof Array) {
    slot = this.findSlot_4.call$1(e);
    copy = this.readSlot_5.call$1(slot);
    if (!(copy == null))
      return copy;
    length$ = e.length;
    if (this.mustCopy_7 === true)
      copy = new Array(length$);
    else
      copy = e;
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(4, e, length$, copy, slot);
    this.writeSlot_6.call$2(slot, copy);
    for (i = 0; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  return e;
},
 call$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      slot = env2;
      copy = env1;
      e = env0;
      break;
    case 3:
      slot = env2;
      length$ = env1;
      e = env0;
      break;
    case 4:
      slot = env3;
      copy = env2;
      length$ = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (e instanceof Date)
        throw $.$$throw($.UnimplementedError$("structured clone of Date"));
      if (e instanceof RegExp)
        throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
    case 2:
      if (state0 === 2 || state0 === 0 && Object.getPrototypeOf(e) === Object.prototype)
        switch (state0) {
          case 0:
            slot = this.findSlot_4.call$1(e);
            copy = this.readSlot_5.call$1(slot);
            if (!(copy == null))
              return copy;
            copy = $.makeLiteralMap([]);
          case 2:
            state0 = 0;
            this.writeSlot_6.call$2(slot, copy);
            for (t1 = $.CONSTANT0.iterator$0(Object.keys(e)); t1.get$hasNext() === true;) {
              t2 = t1.next$0();
              $.indexSet(copy, t2, this.call$1(e[t2]));
            }
            return copy;
        }
    default:
      var e, slot, copy, t1, t2, length$, i;
      if (state0 === 4 || state0 === 3 || state0 === 0 && e instanceof Array)
        switch (state0) {
          case 0:
            slot = this.findSlot_4.call$1(e);
            copy = this.readSlot_5.call$1(slot);
            if (!(copy == null))
              return copy;
            length$ = $.getInterceptor$JSStringJSArray(e).get$length(e);
          case 3:
            state0 = 0;
            copy = this.mustCopy_7 === true ? new Array(length$) : e;
          case 4:
            state0 = 0;
            this.writeSlot_6.call$2(slot, copy);
            for (i = 0; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      return e;
  }
}
};

$$.BoundClosure = {"":"Closure;self,target", call$1: function(p0) {
  return this.self[this.target](p0);
}
};
$$.BoundClosure0 = {"":"Closure;self,target", call$0: function() {
  return this.self[this.target]();
}
};
$$.BoundClosure1 = {"":"Closure;self,target", call$3: function(p0, p1, p2) {
  return this.self[this.target](p0, p1, p2);
},
 call$2: function(url, name$) {
  return this.call$3(url, name$, null);
}
};
$$.BoundClosure2 = {"":"Closure;self,target", call$2: function(p0, p1) {
  return this.self[this.target](p0, p1);
},
 call$1: function(stream) {
  return this.call$2(stream, $);
}
};
$$.BoundClosure3 = {"":"Closure;self,target", call$2: function(p0, p1) {
  return this.self[this.target](p0, p1);
},
 call$0: function() {
  return this.call$2(null, null);
},
 call$1: function(code) {
  return this.call$2(code, null);
}
};
$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.le = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.index = function(a, index) {
  var key;
  if (typeof a == "string" || a.constructor === Array) {
    key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else
      throw $.$$throw($.ArgumentError$(b));
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.CONSTANT1.truncate$0(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.index$slow = function(a, index) {
  var t1;
  if (!(typeof a === 'string'))
    t1 = !(a == null) && a.constructor === Array;
  else
    t1 = true;
  if (t1) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.CONSTANT1.truncate$0(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, "indexed set");
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.getInterceptor(value).toString$0(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CONSTANT;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  var t1 = this.dartException;
  return $.getInterceptor(t1).toString$0(t1);
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") !== -1 || $.eqB(type, "property_not_function") || $.eqB(type, "called_non_callable") || $.eqB(type, "non_object_property_call") || $.eqB(type, "non_object_property_load"))
      return $.NoSuchMethodError$(null, name$, [], $.makeLiteralMap([]), null);
    else if ($.eqB(type, "undefined_method"))
      return $.NoSuchMethodError$("", name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.CONSTANT5.endsWith$1(message, "is null") === true || $.CONSTANT5.endsWith$1(message, "is undefined") === true || $.CONSTANT5.endsWith$1(message, "is null or undefined") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" is not a function") === -1)
          t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(typeof message === 'string' ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.CONSTANT0.iterator$0(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return new $.invokeClosure_anon(closure).call$0();
  else if ($.eqB(numberOfArguments, 1))
    return new $.invokeClosure_anon0(arg1, closure).call$0();
  else if ($.eqB(numberOfArguments, 2))
    return new $.invokeClosure_anon1(closure, arg1, arg2).call$0();
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $, arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.DataPeerWrapper$ = function(pm, p) {
  var t1 = new $.DataPeerWrapper(null, $.Logger_Logger(), null, "closed", "open", "offer", "answer", null, null, null, false, false, $.Logger_Logger(), null, null, null);
  t1.PeerWrapper$2(pm, p);
  t1.DataPeerWrapper$2(pm, p);
  return t1;
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.DivElement_DivElement = function() {
  return $.document().$$dom_createElement$1("div");
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return "Null";
  constructor$ = object.constructor;
  if (typeof(constructor$) === "function") {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === "") && !(name$ === "Object") && !(name$ === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.HeloPacket$With = function(channelId, id) {
  return new $.HeloPacket("helo", channelId, id);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, t2, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (multiLine === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "m");
  }
  if (ignoreCase === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "i");
  }
  if (global === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "g");
  }
  try {
    t1 = pattern;
    t2 = sb;
    t1 = new RegExp(t1, $.getInterceptor(t2).toString$0(t2));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "GeoGeolocation")
    return "Geolocation";
  if (name$ === "MouseScrollEvent")
    return "WheelEvent";
  if (name$ === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name$ === "WorkerMessageEvent")
    return "MessageEvent";
  if (name$ === "XMLDocument")
    return "Document";
  return name$;
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, length$, patternLength, startIndex, position, endIndex;
  result = $.List_List(null);
  t1 = $.getInterceptor$JSStringJSArray(haystack);
  length$ = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  var substr, t1;
  if (typeof other === 'string')
    return !$.eqB($.CONSTANT5.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT5.substring$1(receiver, startIndex));
  else {
    substr = $.CONSTANT5.substring$1(receiver, startIndex);
    t1 = $.getInterceptor$JSString(other).allMatches$1(other, substr);
    return $.getInterceptor$JSArray(t1).iterator$0(t1).get$hasNext();
  }
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name$ === "ApplicationCache")
    return "DOMApplicationCache";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "HTMLDDElement")
    return "HTMLElement";
  if (name$ === "HTMLDTElement")
    return "HTMLElement";
  if (name$ === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLPhraseElement")
    return "HTMLElement";
  if (name$ === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name$ === "MouseWheelEvent")
    return "WheelEvent";
  if (name$ === "Position")
    return "Geoposition";
  return name$;
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, t1, i;
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length$ = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), false, false), true), to);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  return name$;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT9)[name$];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined") {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Opera", 0);
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, hasOwnPropertyFunction, method, secondTag, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
  if (method == null) {
    secondTag = $.alternateTag(obj, tag);
    if (!(secondTag == null))
      method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
  }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT9));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!$.callHasOwnProperty(hasOwnPropertyFunction, proto, name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$._Device_isIE = function() {
  var t1, t2;
  if ($._Device_isOpera() !== true) {
    t1 = $._Device_userAgent();
    t2 = $.getInterceptor$JSString(t1).contains$2(t1, "MSIE", 0) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$._Device_isFirefox = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Firefox", 0);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function(function$, object, property) {
  return function$.call(object, property);
};

$.typeNameInWebKitCommon = function(tag) {
  var name$ = tag;
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.RtcDataChannelEvents$ = function(_ptr) {
  return new $.RtcDataChannelEvents(_ptr);
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.print = function(object) {
  $.Primitives_printString(object);
};

$._RtcPeerConnectionFactoryProvider_createRtcPeerConnection = function(rtcIceServers, mediaConstraints) {
  return new RTCPeerConnection(rtcIceServers,mediaConstraints);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.WebSocketEvents$ = function(_ptr) {
  return new $.WebSocketEvents(_ptr);
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$.InvalidPacketException$ = function(msg, original) {
  return new $.InvalidPacketException(msg, original);
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.PongPacket$ = function() {
  return new $.PongPacket("pong");
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$multiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$.RegExp_RegExp = function(pattern, ignoreCase, multiLine) {
  return $.JSSyntaxRegExp$(pattern, ignoreCase, multiLine);
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.RoutePacket$With = function(caller, target, router) {
  return new $.RoutePacket("route", caller, target, router);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.QuickHandler$ = function() {
  var t1 = new $.QuickHandler(null, null, null, null, null, null, null);
  t1.QuickHandler$0();
  return t1;
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$.Url_createObjectUrl = function(blob_OR_source_OR_stream) {
  return (window.URL || window.webkitURL).createObjectURL(blob_OR_source_OR_stream);
};

$.WheelSignalHandler$ = function() {
  var t1 = new $.WheelSignalHandler(null, null, null, $.Logger_Logger(), null, null, null, false, null, null);
  t1.SignalHandler$0();
  t1.WheelSignalHandler$0();
  return t1;
};

$.main = function() {
  var q, t1;
  q = $.QuickHandler$();
  q.set$local($.query("#main"));
  q.set$remote($.query("#aux"));
  q.set$next($.query("#next"));
  t1 = $.window().get$on().get$resize();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.main_anon(q));
  t1 = $.window().get$on().get$beforeUnload();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.main_anon0(q));
  $.Notifier_Notifier().display$1("Allow access to web camera!");
  $.Logger_Logger().Debug$1("Requesting access to camerA");
  $.window().get$navigator().webkitGetUserMedia$3($.makeLiteralMap(["video", true, "audio", true]), new $.main_anon1(q), new $.main_anon2());
};

$.window = function() {
  return window;
};

$.query = function(selector) {
  return $.document().query$1(selector);
};

$.document = function() {
  return document;
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.MediaStreamEvents$ = function(_ptr) {
  return new $.MediaStreamEvents(_ptr);
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$.PeerManager_PeerManager = function() {
  if ($.PeerManager__instance == null)
    $.PeerManager__instance = $.PeerManager$_internal();
  return $.PeerManager__instance;
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$.PeerManager$_internal = function() {
  var t1 = new $.PeerManager("closed", "open", $.Logger_Logger(), false, null, null, null);
  t1.PeerManager$_internal$0();
  return t1;
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.Notifier_Notifier = function() {
  if ($.Notifier__instance == null)
    $.Notifier__instance = $.Notifier$_internal();
  return $.Notifier__instance;
};

$.Notifier$_internal = function() {
  var t1 = new $.Notifier("#xzy_notifier", null, null, null, null, 800, 60, null, 1000, 5000, false, null);
  t1.Notifier$_internal$0();
  return t1;
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$.UserMessage$With = function(id, message) {
  return new $.UserMessage("usermessage", id, message);
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$.Disconnected$With = function(id) {
  return new $.Disconnected("disconnected", id, null);
};

$.ConnectionSuccessPacket$With = function(id) {
  return new $.ConnectionSuccessPacket("connected", id);
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$.ByePacket$With = function(id) {
  return new $.ByePacket("bye", id);
};

$.IdPacket$With = function(id, channelId) {
  return new $.IdPacket("id", channelId, id);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$.JoinPacket$With = function(channelId, id) {
  return new $.JoinPacket("join", channelId, id);
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.double_parse = function(source) {
  return $.Primitives_parseDouble(source);
};

$.Message$ = function(message, callback) {
  return new $.Message(message, callback);
};

$.Logger_Logger = function() {
  if ($.Logger_instance == null)
    $.Logger_instance = $.Logger$_internal();
  return $.Logger_instance;
};

$.Logger$_internal = function() {
  var t1 = new $.Logger(null);
  t1.Logger$_internal$0();
  return t1;
};

$.PeerWrapper$ = function(pm, p) {
  var t1 = new $.PeerWrapper("closed", "open", "offer", "answer", null, null, null, false, false, $.Logger_Logger(), null, null, null);
  t1.PeerWrapper$2(pm, p);
  return t1;
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator($.getInterceptor$JSStringJSArray(array).get$length(array), array, 0);
};

$.convertDartToNative_Dictionary = function(dict) {
  var object;
  if (dict == null)
    return;
  object = {};
  $.getInterceptor$JSArray(dict).forEach$1(dict, new $.convertDartToNative_Dictionary_anon(object));
  return object;
};

$.convertNativeToDart_SerializedScriptValue = function(object) {
  return $.convertNativeToDart_AcceptStructuredClone(object, true);
};

$.convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var values, copies;
  values = [];
  copies = [];
  return new $.convertNativeToDart_AcceptStructuredClone_walk(new $.convertNativeToDart_AcceptStructuredClone_findSlot(copies, values), new $.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new $.convertNativeToDart_AcceptStructuredClone_writeSlot(copies), mustCopy).call$1(object);
};

$.Date_Date$now = function() {
  return $._DateImpl$now();
};

$.Date_Date$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  return $._DateImpl$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc);
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if ("\nThis program is using an experimental feature called \"mirrors\".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n" === string)
    $.Primitives_mirrorsEnabled = true;
  else if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives_parseInt = function(string) {
  var match, base, result;
  $.checkString(string);
  match = /^\s*[+-]?(?:0(x)[a-f0-9]+|\d+)\s*$/i.exec(string);
  if (match == null)
    throw $.$$throw($.FormatException$(string));
  base = !($.index(match, 1) == null) ? 16 : 10;
  result = parseInt(string, base);
  if ($.CONSTANT1.get$isNaN(result) === true)
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Primitives_parseDouble = function(string) {
  var result;
  $.checkString(string);
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(string))
    throw $.$$throw($.FormatException$(string));
  result = parseFloat(string);
  if ($.CONSTANT1.get$isNaN(result) === true && !$.eqB(string, "NaN"))
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled, t1;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  t1 = $.getInterceptor$JSString(name$);
  return t1.charCodeAt$1(name$, 0) === 36 ? t1.substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives__fromCharCodeApply = function(array) {
  var end, t1, i, result, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, i = 0, result = ""; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result = result + String.fromCharCode.apply(null, subarray);
  }
  return result;
};

$.Primitives_stringFromCodePoints = function(codePoints) {
  var a, t1, t2;
  a = [];
  for (t1 = $.CONSTANT0.iterator$0(codePoints); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 <= 65535)
      a.push(t2);
    else if (t2 <= 1114111) {
      a.push(55296 + ($.shr(t2 - 65536, 10) & 1023));
      a.push(56320 + (t2 & 1023));
    } else
      throw $.$$throw($.ArgumentError$(t2));
  }
  return $.Primitives__fromCharCodeApply(a);
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.CONSTANT0.iterator$0(charCodes); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 < 0)
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 > 65535)
      return $.Primitives_stringFromCodePoints(charCodes);
  }
  return $.Primitives__fromCharCodeApply(charCodes);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.Error_safeToString = function(object) {
  var t1;
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.getInterceptor(object).toString$0(object);
  if (typeof object === 'string') {
    t1 = $.CONSTANT5.replaceAll$2(object, "\\", "\\\\");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\n", "\\n");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\r", "\\r");
    return "\"" + $.S($.getInterceptor$JSString(t1).replaceAll$2(t1, "\"", "\\\"")) + "\"";
  }
  return $.Primitives_objectToString(object);
};

$._DateImpl$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $._DateImpl(millisecondsSinceEpoch, isUtc);
  t1._DateImpl$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$._DateImpl$now = function() {
  var t1 = new $._DateImpl($.Primitives_dateNow(), false);
  t1._DateImpl$now$0();
  return t1;
};

$.Util_aspectRatio = function(x, y) {
  if ($.gtB($.div($.getInterceptor$JSNumber(x).toDouble$0(x), $.getInterceptor$JSNumber(y).toDouble$0(y)), 1.7))
    return "16:9";
  else
    return "4:3";
};

$.Util_getHeight = function(width, aspectRatio) {
  return $.eqB(aspectRatio, "4:3") ? $.tdiv($.mul(width, 3), 4) : $.tdiv($.mul(width, 9), 16);
};

$.PacketFactory_getPacketFromString = function(input, exception) {
  var t1, e;
  try {
    t1 = $.PacketFactory_getPacketFromMap($.JSON_parse(input));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.InvalidPacketException$("Invalid packet", e));
  }

};

$.PacketFactory_getPacketFromMap = function(m, exception) {
  var pt, p, t1, p0, e;
  try {
    pt = $.index(m, "packetType");
    p = null;
    switch (pt) {
      case "helo":
        t1 = m;
        p0 = $.HeloPacket$With($.index(t1, "channelId"), $.index(t1, "id"));
        p = p0;
        break;
      case "desc":
        p = $.DescriptionPacket_fromMap(m);
        break;
      case "ice":
        p = $.ICEPacket_fromMap(m);
        break;
      case "connected":
        p0 = $.ConnectionSuccessPacket$With($.index(m, "id"));
        p = p0;
        break;
      case "id":
        t1 = m;
        p0 = $.IdPacket$With($.index(t1, "id"), $.index(t1, "channelId"));
        p = p0;
        break;
      case "join":
        t1 = m;
        p0 = $.JoinPacket$With($.index(t1, "channelId"), $.index(t1, "id"));
        p = p0;
        break;
      case "pong":
        p0 = $.PongPacket$();
        p = p0;
        break;
      case "ping":
        p0 = $.PingPacket$With($.index(m, "userId"));
        p = p0;
        break;
      case "bye":
        p0 = $.ByePacket$With($.index(m, "id"));
        p = p0;
        break;
      case "route":
        t1 = m;
        p0 = $.RoutePacket$With($.index(t1, "caller"), $.index(t1, "target"), $.index(t1, "router"));
        p = p0;
        break;
      case "usermessage":
        t1 = m;
        p0 = $.UserMessage$With($.index(t1, "id"), $.index(t1, "message"));
        p = p0;
        break;
      case "disconnected":
        p0 = $.Disconnected$With($.index(m, "id"));
        p = p0;
        break;
      case "random":
        p0 = $.RandomUserPacket$With($.index(m, "id"));
        p = p0;
        break;
      default:
        $.print("Unkown packet");
        p = null;
        break;
    }
    t1 = p;
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.InvalidPacketException$("Packet was malformed", e));
  }

};

$.PacketFactory_get = function(p) {
  return $.JSON_stringify(p);
};

$.RandomUserPacket$With = function(id) {
  return new $.RandomUserPacket("random", id);
};

$.JSON_parse = function(json) {
  return $._JsonParser$(json).parseToplevel$0();
};

$.JSON_stringify = function(object) {
  return $._JsonStringifier_stringify(object);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$._JsonStringifier_stringify = function(object) {
  var output = $.StringBuffer_StringBuffer("");
  $._JsonStringifier$(output).stringifyValue$1(object);
  return $.getInterceptor(output).toString$0(output);
};

$._JsonStringifier$ = function(sb) {
  return new $._JsonStringifier(sb, []);
};

$._JsonStringifier_escape = function(sb, s) {
  var t1, length$, charCodes, needsEscape, i, charCode, t2;
  t1 = $.getInterceptor$JSStringJSArray(s);
  length$ = t1.get$length(s);
  charCodes = $.List_List(null);
  for (needsEscape = false, i = 0; $.ltB(i, length$); ++i) {
    charCode = t1.charCodeAt$1(s, i);
    if ($.ltB(charCode, 32)) {
      charCodes.push(92);
      switch (charCode) {
        case 8:
          charCodes.push(98);
          break;
        case 9:
          charCodes.push(116);
          break;
        case 10:
          charCodes.push(110);
          break;
        case 12:
          charCodes.push(102);
          break;
        case 13:
          charCodes.push(114);
          break;
        default:
          charCodes.push(117);
          t2 = $.and($.shr(charCode, 12), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          t2 = $.and($.shr(charCode, 8), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          t2 = $.and($.shr(charCode, 4), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          t2 = $.and(charCode, 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          break;
      }
      needsEscape = true;
    } else if ($.eqB(charCode, 34) || $.eqB(charCode, 92)) {
      charCodes.push(92);
      charCodes.push(charCode);
      needsEscape = true;
    } else
      charCodes.push(charCode);
  }
  t1 = $.getInterceptor$JSArray(sb);
  t1.add$1(sb, needsEscape ? $.String_String$fromCharCodes(charCodes) : s);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$._RtcSessionDescriptionFactoryProvider_createRtcSessionDescription = function(dictionary) {
  return new RTCSessionDescription(dictionary);
};

$.JsonUnsupportedObjectError$withCause = function(unsupportedObject, cause) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, cause);
};

$._RtcIceCandidateFactoryProvider_createRtcIceCandidate = function(dictionary) {
  return new RTCIceCandidate(dictionary);
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$.JsonUnsupportedObjectError$ = function(unsupportedObject) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, null);
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.WebSocket_WebSocket = function(url) {
  return new WebSocket(url);
};

$.HeadingElement_HeadingElement$h2 = function() {
  return $.document().$$dom_createElement$1("h2");
};

$._JsonParser$ = function(json) {
  var t1 = new $._JsonParser(json, $.getInterceptor$JSStringJSArray(json).get$length(json), 0);
  t1._JsonParser$1(json);
  return t1;
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$.RtcSessionDescription_RtcSessionDescription = function(dictionary) {
  return $._RtcSessionDescriptionFactoryProvider_createRtcSessionDescription(dictionary);
};

$.RtcPeerConnection_RtcPeerConnection = function(rtcIceServers, mediaConstraints) {
  var t1 = $ === mediaConstraints;
  if (t1)
    mediaConstraints = null;
  if (t1)
    return $._RtcPeerConnectionFactoryProvider_createRtcPeerConnection(rtcIceServers, null);
  return $._RtcPeerConnectionFactoryProvider_createRtcPeerConnection(rtcIceServers, mediaConstraints);
};

$.RtcIceCandidate_RtcIceCandidate = function(dictionary) {
  return $._RtcIceCandidateFactoryProvider_createRtcIceCandidate(dictionary);
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer("");
  $.Collections__emitCollection(c, result, $.List_List(null));
  return $.getInterceptor(result).toString$0(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  t2 = $.getInterceptor$JSArray(result);
  t2.add$1(result, isList ? "[" : "{");
  for (t3 = $.getInterceptor$JSArray(c).iterator$0(c), first = true; t3.get$hasNext() === true; first = false) {
    t4 = t3.next$0();
    if (!first)
      t2.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t2.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  var t1;
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o)) {
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? "[...]" : "{...}");
    } else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.getInterceptor$JSArray(result).add$1(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.getInterceptor$JSArray(result).add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(c).iterator$0(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$.String_String$fromCharCodes = function(charCodes) {
  if (!$.isJsArray(charCodes))
    charCodes = $.List_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.ICEPacket$With = function(candidate, sdpMid, sdpMLineIndex, userId, roomId) {
  return new $.ICEPacket(candidate, sdpMid, sdpMLineIndex, roomId, userId, "ice");
};

$.DescriptionPacket$With = function(sdp, type, id, channelId) {
  return new $.DescriptionPacket("desc", sdp, id, channelId, type);
};

$.List_List = function(length$) {
  return $.Primitives_newList(length$);
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(null);
  for (t1 = $.getInterceptor$JSArray(other).iterator$0(other); t1.get$hasNext() === true;)
    list.push(t1.next$0());
  return list;
};

$.Collections_contains = function(iterable, element) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    if ($.eqB(element, t1.next$0()))
      return true;
  return false;
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(source).iterator$0(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.getInterceptor$JSArray(m).forEach$1(m, new $.Maps__emitMap_anon(t1, result, visiting));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer("");
  $.Maps__emitMap(m, result, $.List_List(null));
  return $.getInterceptor(result).toString$0(result);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$.Strings__toJsStringArray = function(strings) {
  var length$, i, string, array;
  if (typeof strings !== 'string' && (typeof strings !== 'object' || strings === null || strings.constructor !== Array && !strings.is$JavaScriptIndexingBehavior()))
    return $.Strings__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $.List_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$.Map_Map = function() {
  return $._HashMapImpl$();
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$.ICEPacket_fromMap = function(m) {
  return $.ICEPacket$With($.index(m, "candidate"), $.index(m, "sdpMid"), $.index(m, "sdpMLineIndex"), $.index(m, "userId"), $.index(m, "roomId"));
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, 0);
};

$.DescriptionPacket_fromMap = function(m) {
  return $.DescriptionPacket$With($.index(m, "sdp"), $.index(m, "type"), $.index(m, "id"), $.index(m, "channelId"));
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.PingPacket$With = function(userId) {
  return new $.PingPacket("ping", userId);
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$.int_parse = function(source) {
  return $.Primitives_parseInt(source);
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Lists_getRange = function(a, start, length$, accumulator) {
  var end, i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== 'number')
    return $.Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length$ !== 'number')
    throw $.iae(length$);
  end = start + length$;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.RtcPeerConnectionEvents$ = function(_ptr) {
  return new $.RtcPeerConnectionEvents(_ptr);
};

$.LocalWindowEvents$ = function(_ptr) {
  return new $.LocalWindowEvents(_ptr);
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.getInterceptor$JSStringJSArray(a).get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Strings__toJsStringArray$bailout = function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      strings = env0;
      break;
    case 2:
      length$ = env1;
      strings = env0;
      break;
    case 3:
      length$ = env2;
      array = env1;
      strings = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.checkNull(strings);
      length$ = $.getInterceptor$JSStringJSArray(strings).get$length(strings);
    case 2:
      state0 = 0;
    case 3:
      var strings, length$, i, string, array;
      if (state0 === 0 && $.isJsArray(strings)) {
        for (i = 0; $.ltB(i, length$); ++i) {
          string = $.index(strings, i);
          if (!(typeof string === 'string'))
            throw $.$$throw($.ArgumentError$(string));
        }
        array = strings;
      } else
        switch (state0) {
          case 0:
            array = $.List_List(length$);
          case 3:
            state0 = 0;
            for (i = 0; $.ltB(i, length$); ++i) {
              string = $.index(strings, i);
              if (!(typeof string === 'string'))
                throw $.$$throw($.ArgumentError$(string));
              $.indexSet(array, i, string);
            }
        }
      return array;
  }
};

$.Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  var end, i;
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if ($.ltB(start, 0))
    throw $.$$throw($.RangeError$value(start));
  end = $.add(start, length$);
  if ($.gtB(end, $.getInterceptor$JSStringJSArray(a).get$length(a)))
    throw $.$$throw($.RangeError$value(end));
  for (i = start; $.ltB(i, end); i = $.add(i, 1))
    accumulator.push($.index(a, i));
  return accumulator;
};

$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
Isolate.$finishClasses($$);
$$ = {};
$.CONSTANT2 = new Isolate.$isolateProperties.JSInt();
$.CONSTANT5 = new Isolate.$isolateProperties.JSString();
$.CONSTANT = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT3 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CONSTANT9 = new Isolate.$isolateProperties.Object();
$.CONSTANT4 = new Isolate.$isolateProperties.LogLevel(4, "Debug");
$.CONSTANT8 = new Isolate.$isolateProperties.LogLevel(2, "Warn");
$.CONSTANT7 = new Isolate.$isolateProperties.LogLevel(1, "Info");
$.CONSTANT6 = new Isolate.$isolateProperties.LogLevel(3, "Error");
$.CONSTANT0 = new Isolate.$isolateProperties.JSArray();
$.CONSTANT1 = new Isolate.$isolateProperties.JSNumber();
$.Notifier__instance = null;
$.DEBUG = false;
$.Primitives_hashCodeSeed = 0;
$.Primitives_mirrorsEnabled = false;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.Logger_instance = null;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CONSTANT3;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$._DateImpl__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$._JsonParser_BACKSPACE = 8;
$._JsonParser_TAB = 9;
$._JsonParser_NEW_LINE = 10;
$._JsonParser_FORM_FEED = 12;
$._JsonParser_CARRIAGE_RETURN = 13;
$._JsonParser_SPACE = 32;
$._JsonParser_QUOTE = 34;
$._JsonParser_PLUS = 43;
$._JsonParser_COMMA = 44;
$._JsonParser_MINUS = 45;
$._JsonParser_DOT = 46;
$._JsonParser_SLASH = 47;
$._JsonParser_CHAR_0 = 48;
$._JsonParser_CHAR_1 = 49;
$._JsonParser_CHAR_2 = 50;
$._JsonParser_CHAR_3 = 51;
$._JsonParser_CHAR_4 = 52;
$.WebSocket_CLOSED = 3;
$._JsonParser_CHAR_5 = 53;
$._getTypeNameOf = null;
$.MARGIN = 10;
$.MAX_WIDTH = 800;
$._JsonParser_CHAR_8 = 56;
$._JsonParser_CHAR_9 = 57;
$._JsonParser_COLON = 58;
$.MIRROR_OPT_IN_MESSAGE = "\nThis program is using an experimental feature called \"mirrors\".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n";
$._JsonParser_CHAR_CAPITAL_E = 69;
$._JsonParser_LBRACKET = 91;
$._JsonParser_BACKSLASH = 92;
$._JsonParser_RBRACKET = 93;
$._JsonParser_CHAR_7 = 55;
$._JsonParser_CHAR_B = 98;
$._JsonParser_CHAR_E = 101;
$._JsonParser_CHAR_F = 102;
$._JsonParser_CHAR_N = 110;
$._JsonParser_CHAR_R = 114;
$._JsonParser_CHAR_T = 116;
$._JsonParser_CHAR_U = 117;
$._JsonParser_LBRACE = 123;
$._JsonParser_RBRACE = 125;
$._JsonParser_STRING_LITERAL = 34;
$._JsonParser_FALSE_LITERAL = 102;
$._JsonParser_NULL_LITERAL = 110;
$._JsonParser_NUMBER_LITERAL = 45;
$._JsonParser_LAST_ASCII = 125;
$._JsonParser_WHITESPACE = 32;
$._JsonParser_TRUE_LITERAL = 116;
$._JsonParser_NULL_STRING = "null";
$.PeerManager__instance = null;
$._JsonParser_tokens = null;
$._JsonParser_FALSE_STRING = "false";
$._JsonParser_TRUE_STRING = "true";
$._JsonParser_CHAR_6 = 54;
$._cachedBrowserPrefix = null;
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == 'number') return $.JSNumber.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  if (typeof receiver == 'number' && Math.floor(receiver) == receiver) return $.JSInt.prototype;
  if (typeof receiver == 'number') return $.JSDouble.prototype;
  if (receiver == null) return $.JSNull.prototype;
  if (typeof receiver == 'function') return $.JSFunction.prototype;
  if (typeof receiver == 'boolean') return $.JSBool.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, 'WEBSOCKET_SERVER', 'WEBSOCKET_SERVER', 'get$WEBSOCKET_SERVER', function() {
  return "ws://bananafarm.org:8234/ws";
});
Isolate.$lazy($, 'quoteRegExp', 'quoteRegExp', 'get$quoteRegExp', function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", false, false);
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {        if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 toString$0: function() { return $.toStringForNativeObject(this); },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); },
 is$Collection: function() { return false; },
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$Map: function() { return false; },
 is$List: function() { return false; },
 is$Element: function() { return false; }
});

$.$defineNativeClass('HTMLAnchorElement', {"":"target>,type>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLAppletElement', {"":"code>,height=,width<"
});

$.$defineNativeClass('HTMLAreaElement', {"":"target>"
});

$.$defineNativeClass('Attr', {"":"value="
});

$.$defineNativeClass('HTMLBRElement', {
 clear$0: function() {
  return this.clear.call$0();
}
});

$.$defineNativeClass('HTMLBaseElement', {"":"target>"
});

$.$defineNativeClass('Blob', {"":"type>"
});

$.$defineNativeClass('HTMLBodyElement', {"":"background<",
 get$on: function() {
  return $.BodyElementEvents$(this);
}
});

$.$defineNativeClass('HTMLButtonElement', {"":"type>,value="
});

$.$defineNativeClass('HTMLCanvasElement', {"":"height=,width<"
});

$.$defineNativeClass('CharacterData', {"":"data>,length>",
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('CloseEvent', {"":"code>,reason>"
});

$.$defineNativeClass('CompositionEvent', {"":"data>"
});

$.$defineNativeClass('CSSStyleDeclaration', {"":"length>",
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : "";
},
 setProperty$3: function(propertyName, value, priority) {
  this.setProperty(propertyName, value, priority);
  if (!!this.setAttribute)
    this.setAttribute(propertyName, value);
},
 set$background: function(value) {
  this.setProperty$3("background", value, "");
},
 set$border: function(value) {
  this.setProperty$3("border", value, "");
},
 set$boxShadow: function(value) {
  this.setProperty$3("box-shadow", value, "");
},
 get$clear: function() {
  return this.getPropertyValue$1("clear");
},
 clear$0: function() {
  return this.get$clear().call$0();
},
 get$display: function() {
  return this.getPropertyValue$1("display");
},
 display$1: function(arg0) {
  return this.get$display().call$1(arg0);
},
 set$display: function(value) {
  this.setProperty$3("display", value, "");
},
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + "filter");
},
 filter$1: function(arg0) {
  return this.get$filter().call$1(arg0);
},
 get$height: function() {
  return this.getPropertyValue$1("height");
},
 set$height: function(value) {
  this.setProperty$3("height", value, "");
},
 set$left: function(value) {
  this.setProperty$3("left", value, "");
},
 set$padding: function(value) {
  this.setProperty$3("padding", value, "");
},
 set$position: function(value) {
  this.setProperty$3("position", value, "");
},
 get$resize: function() {
  return this.getPropertyValue$1("resize");
},
 resize$0: function() {
  return this.get$resize().call$0();
},
 set$src: function(value) {
  this.setProperty$3("src", value, "");
},
 set$textAlign: function(value) {
  this.setProperty$3("text-align", value, "");
},
 set$top: function(value) {
  this.setProperty$3("top", value, "");
},
 set$width: function(value) {
  this.setProperty$3("width", value, "");
},
 set$zIndex: function(value) {
  this.setProperty$3("z-index", value, "");
}
});

$.$defineNativeClass('HTMLDetailsElement', {"":"open>"
});

$.$defineNativeClass('Document', {"":"documentElement>,readyState>",
 get$on: function() {
  return $.DocumentEvents$(this);
},
 $$dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $$dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 query$1: function(selectors) {
  if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", false, false).hasMatch$1(selectors) === true)
    return this.$$dom_getElementById$1($.CONSTANT5.substring$1(selectors, 1));
  return this.$$dom_querySelector$1(selectors);
}
});

$.$defineNativeClass('DocumentFragment', {
 get$children: function() {
  if (this._children == null)
    this._children = $.FilteredElementList$(this);
  return this._children;
},
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 get$id: function() {
  return "";
},
 get$style: function() {
  return $.Element_Element$tag("div").get$style();
},
 click$0: function() {
},
 get$click: function() {
  return new $.BoundClosure0(this, 'click$0');
},
 set$id: function(value) {
  throw $.$$throw($.UnsupportedError$("ID can't be set for document fragments."));
},
 get$on: function() {
  return $.ElementEvents$(this);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
}
});

$.$defineNativeClass('DocumentType', {
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DOMException', {"":"code>,message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Element', {"":"$$dom_children:children~,id=,clientWidth>,$$dom_firstElementChild:firstElementChild~,$$dom_lastElementChild:lastElementChild~,style>",
 get$children: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$children')) {
    return $._ChildrenElementList$_wrap(this);
  } else {
    return Object.prototype.get$children.call(this);
  }
},
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.ElementEvents$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 click$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('click$0')) {
    return this.click();
  } else {
    return Object.prototype.click$0.call(this);
  }
},
 get$click: function() {
  return new $.BoundClosure0(this, 'click$0');
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', {"":"height=,src<,type>,width<"
});

$.$defineNativeClass('ErrorEvent', {"":"message>"
});

$.$defineNativeClass('Event', {"":"type>",
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.target);
}
});

$.$defineNativeClass('EventException', {"":"code>,message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventTarget', {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.Events$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_addEventListener$3')) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  }
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_removeEventListener$3')) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
}
});

$.$defineNativeClass('HTMLFieldSetElement', {"":"type>"
});

$.$defineNativeClass('FileError', {"":"code>"
});

$.$defineNativeClass('FileException', {"":"code>,message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Float32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Float64Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLFormElement', {"":"length>,target>"
});

$.$defineNativeClass('HTMLFrameElement', {"":"height>,src<"
});

$.$defineNativeClass('HTMLFrameSetElement', {
 get$on: function() {
  return $.FrameSetElementEvents$(this);
}
});

$.$defineNativeClass('HTMLHRElement', {"":"width<"
});

$.$defineNativeClass('HTMLCollection', {
 get$length: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$length')) {
    return this.length;
  } else {
    return Object.prototype.get$length.call(this);
  }
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$length')) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  } else {
    return Object.prototype.set$length.call(this, value);
  }
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', {
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
}
});

$.$defineNativeClass('XMLHttpRequestException', {"":"code>,message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLIFrameElement', {"":"height=,src<,width<"
});

$.$defineNativeClass('HTMLImageElement', {"":"border<,height=,src<,width<"
});

$.$defineNativeClass('HTMLInputElement', {"":"height=,pattern>,src<,type>,value=,width<",
 get$on: function() {
  return $.InputElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Int16Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int8Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLKeygenElement', {"":"type>"
});

$.$defineNativeClass('HTMLLIElement', {"":"type>,value="
});

$.$defineNativeClass('HTMLLinkElement', {"":"target>,type>"
});

$.$defineNativeClass('DOMWindow', {"":"navigator>",
 open$3: function(url, name$, options) {
  if (options == null)
    return $._DOMWindowCrossFrame__createSafe(this.open(url,name$));
  else
    return $._DOMWindowCrossFrame__createSafe(this.open(url,name$,options));
},
 get$open: function() {
  return new $.BoundClosure1(this, 'open$3');
},
 get$on: function() {
  return $.LocalWindowEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 clearInterval$1: function(handle) {
  return this.clearInterval(handle);
},
 close$0: function() {
  return this.close();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('HTMLMarqueeElement', {"":"height=,width<"
});

$.$defineNativeClass('HTMLMediaElement', {"":"error>,readyState>,src<",
 get$on: function() {
  return $.MediaElementEvents$(this);
},
 pause$0: function() {
  return this.pause();
}
});

$.$defineNativeClass('MediaError', {"":"code>"
});

$.$defineNativeClass('MediaKeyError', {"":"code>"
});

$.$defineNativeClass('MediaKeyEvent', {"":"message>"
});

$.$defineNativeClass('MediaStream', {"":"readyState>",
 get$on: function() {
  return $.MediaStreamEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamEvent', {"":"stream>"
});

$.$defineNativeClass('MessageEvent', {
 get$data: function() {
  return $.convertNativeToDart_SerializedScriptValue(this.data);
}
});

$.$defineNativeClass('HTMLMeterElement', {"":"value="
});

$.$defineNativeClass('NamedNodeMap', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Navigator', {"":"userAgent>",
 webkitGetUserMedia$3: function(options, successCallback, errorCallback) {
  var t1 = $ === errorCallback;
  if (t1)
    errorCallback = null;
  if (!t1) {
    this._webkitGetUserMedia_1$3($.convertDartToNative_Dictionary(options), successCallback, errorCallback);
    return;
  }
  this._webkitGetUserMedia_2$2($.convertDartToNative_Dictionary(options), successCallback);
  return;
},
 _webkitGetUserMedia_1$3: function(options, successCallback, errorCallback) {
  return this.webkitGetUserMedia(options,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
},
 _webkitGetUserMedia_2$2: function(options, successCallback) {
  return this.webkitGetUserMedia(options,$.convertDartClosureToJS(successCallback, 1));
}
});

$.$defineNativeClass('NavigatorUserMediaError', {"":"code>"
});

$.$defineNativeClass('Node', {"":"$$dom_childNodes:childNodes~,text:textContent|",
 get$nodes: function() {
  return $._ChildNodeListLazy$(this);
},
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
    var t1 = this.parentNode;
    if (!(t1 == null))
      t1.$$dom_removeChild$1(this);
  } else {
    return Object.prototype.remove$0.call(this);
  }
},
 replaceWith$1: function(otherNode, exception) {
  var parent$;
  try {
    parent$ = this.parentNode;
    parent$.$$dom_replaceChild$2(otherNode, this);
  } catch (exception) {
    $.unwrapException(exception);
  }

  return this;
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 $$dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOListElement', {"":"type>"
});

$.$defineNativeClass('HTMLObjectElement', {"":"border<,code>,data>,height=,type>,width<"
});

$.$defineNativeClass('HTMLOptionElement', {"":"value="
});

$.$defineNativeClass('HTMLOutputElement', {"":"type>,value="
});

$.$defineNativeClass('HTMLParamElement', {"":"type>,value="
});

$.$defineNativeClass('PositionError', {"":"code>,message>"
});

$.$defineNativeClass('HTMLPreElement', {"":"width<"
});

$.$defineNativeClass('ProcessingInstruction', {"":"data>,target>"
});

$.$defineNativeClass('HTMLProgressElement', {"":"value="
});

$.$defineNativeClass('RadioNodeList', {"":"value="
});

$.$defineNativeClass('RangeException', {"":"code>,message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('RTCDataChannel', {"":"readyState>",
 get$on: function() {
  return $.RtcDataChannelEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
}
});

$.$defineNativeClass('RTCIceCandidate', {"":"candidate>,sdpMLineIndex>,sdpMid>"
});

$.$defineNativeClass('RTCIceCandidateEvent', {"":"candidate>"
});

$.$defineNativeClass('RTCPeerConnection', {"":"readyState>",
 get$on: function() {
  return $.RtcPeerConnectionEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 addIceCandidate$1: function(candidate) {
  return this.addIceCandidate(candidate);
},
 addStream$2: function(stream, mediaConstraints) {
  var t1 = $ === mediaConstraints;
  if (t1)
    mediaConstraints = null;
  if (!t1) {
    this._addStream_1$2(stream, $.convertDartToNative_Dictionary(mediaConstraints));
    return;
  }
  this._addStream_2$1(stream);
  return;
},
 addStream$1: function(stream) {
  return this.addStream$2(stream, $);
},
 get$addStream: function() {
  return new $.BoundClosure2(this, 'addStream$2');
},
 _addStream_1$2: function(stream, mediaConstraints) {
  return this.addStream(stream,mediaConstraints);
},
 _addStream_2$1: function(stream) {
  return this.addStream(stream);
},
 close$0: function() {
  return this.close();
},
 get$close: function() {
  return new $.BoundClosure0(this, 'close$0');
},
 createAnswer$3: function(successCallback, failureCallback, mediaConstraints) {
  var t1 = $ === mediaConstraints;
  if (t1)
    mediaConstraints = null;
  if (!t1) {
    this._createAnswer_1$3(successCallback, failureCallback, $.convertDartToNative_Dictionary(mediaConstraints));
    return;
  }
  this._createAnswer_2$2(successCallback, failureCallback);
  return;
},
 _createAnswer_1$3: function(successCallback, failureCallback, mediaConstraints) {
  return this.createAnswer($.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(failureCallback, 1),mediaConstraints);
},
 _createAnswer_2$2: function(successCallback, failureCallback) {
  return this.createAnswer($.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(failureCallback, 1));
},
 createDataChannel$2: function(label, options) {
  var t1 = $ === options;
  if (t1)
    options = null;
  if (!t1)
    return this._createDataChannel_1$2(label, $.convertDartToNative_Dictionary(options));
  return this._createDataChannel_2$1(label);
},
 createDataChannel$1: function(label) {
  return this.createDataChannel$2(label, $);
},
 _createDataChannel_1$2: function(label, options) {
  return this.createDataChannel(label,options);
},
 _createDataChannel_2$1: function(label) {
  return this.createDataChannel(label);
},
 createOffer$3: function(successCallback, failureCallback, mediaConstraints) {
  var t1 = $ === mediaConstraints;
  if (t1)
    mediaConstraints = null;
  if (!t1) {
    this._createOffer_1$3(successCallback, failureCallback, $.convertDartToNative_Dictionary(mediaConstraints));
    return;
  }
  this._createOffer_2$2(successCallback, failureCallback);
  return;
},
 _createOffer_1$3: function(successCallback, failureCallback, mediaConstraints) {
  return this.createOffer($.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(failureCallback, 1),mediaConstraints);
},
 _createOffer_2$2: function(successCallback, failureCallback) {
  return this.createOffer($.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(failureCallback, 1));
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 removeStream$1: function(stream) {
  return this.removeStream(stream);
},
 get$removeStream: function() {
  return new $.BoundClosure(this, 'removeStream$1');
},
 setLocalDescription$3: function(description, successCallback, failureCallback) {
  return this.setLocalDescription(description,$.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(failureCallback, 1));
},
 setRemoteDescription$3: function(description, successCallback, failureCallback) {
  return this.setRemoteDescription(description,$.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(failureCallback, 1));
}
});

$.$defineNativeClass('RTCSessionDescription', {"":"sdp>,type>"
});

$.$defineNativeClass('HTMLScriptElement', {"":"src<,type>"
});

$.$defineNativeClass('HTMLSelectElement', {"":"length=,type>,value="
});

$.$defineNativeClass('HTMLSourceElement', {"":"src<,type>"
});

$.$defineNativeClass('SpeechRecognitionError', {"":"code>,message>"
});

$.$defineNativeClass('SQLError', {"":"code>,message>"
});

$.$defineNativeClass('SQLException', {"":"code>,message>"
});

$.$defineNativeClass('Storage', {
 containsKey$1: function(key) {
  return !(this.$$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  this.$$dom_setItem$2(key, value);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$$dom_clear$0();
},
 forEach$1: function(f) {
  var i, key;
  for (i = 0; true; ++i) {
    key = this.$$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$length: function() {
  return this.length;
},
 get$isEmpty: function() {
  return this.$$dom_key$1(0) == null;
},
 $$dom_clear$0: function() {
  return this.clear();
},
 $$dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $$dom_key$1: function(index) {
  return this.key(index);
},
 $$dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $$dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {"":"key>"
});

$.$defineNativeClass('HTMLStyleElement', {"":"type>"
});

$.$defineNativeClass('HTMLTableCellElement', {"":"height=,width<"
});

$.$defineNativeClass('HTMLTableColElement', {"":"width<"
});

$.$defineNativeClass('HTMLTableElement', {"":"border<,width<"
});

$.$defineNativeClass('HTMLTextAreaElement', {"":"type>,value="
});

$.$defineNativeClass('TextEvent', {"":"data>"
});

$.$defineNativeClass('HTMLTrackElement', {"":"readyState>,src<"
});

$.$defineNativeClass('HTMLUListElement', {"":"type>"
});

$.$defineNativeClass('Uint16Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLVideoElement', {"":"height=,videoHeight>,videoWidth>,width<"
});

$.$defineNativeClass('WebSocket', {"":"readyState>",
 get$on: function() {
  return $.WebSocketEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$2: function(code, reason) {
  return this.close(code,reason);
},
 close$0: function() {
  return this.close();
},
 get$close: function() {
  return new $.BoundClosure3(this, 'close$2');
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
}
});

$.$defineNativeClass('XPathException', {"":"code>,message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('MediaStreamList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('IDBDatabaseException', {"":"code>,message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGAElement', {"":"target>"
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', {"":"type>"
});

$.$defineNativeClass('SVGFEBlendElement', {"":"height>"
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"":"type>,height>"
});

$.$defineNativeClass('SVGFEComponentTransferElement', {"":"height>"
});

$.$defineNativeClass('SVGFECompositeElement', {"":"height>"
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {"":"height>"
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {"":"height>"
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {"":"height>"
});

$.$defineNativeClass('SVGFEDropShadowElement', {"":"height>"
});

$.$defineNativeClass('SVGFEFloodElement', {"":"height>"
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {"":"height>"
});

$.$defineNativeClass('SVGFEImageElement', {"":"height>"
});

$.$defineNativeClass('SVGFEMergeElement', {"":"height>"
});

$.$defineNativeClass('SVGFEMorphologyElement', {"":"height>"
});

$.$defineNativeClass('SVGFEOffsetElement', {"":"height>"
});

$.$defineNativeClass('SVGFESpecularLightingElement', {"":"height>"
});

$.$defineNativeClass('SVGFETileElement', {"":"height>"
});

$.$defineNativeClass('SVGFETurbulenceElement', {"":"type>,height>"
});

$.$defineNativeClass('SVGFilterElement', {"":"height>"
});

$.$defineNativeClass('SVGForeignObjectElement', {"":"height>"
});

$.$defineNativeClass('SVGImageElement', {"":"height>"
});

$.$defineNativeClass('SVGMaskElement', {"":"height>"
});

$.$defineNativeClass('SVGPatternElement', {"":"height>"
});

$.$defineNativeClass('SVGRectElement', {"":"height>"
});

$.$defineNativeClass('SVGScriptElement', {"":"type>"
});

$.$defineNativeClass('SVGStyleElement', {"":"type>"
});

$.$defineNativeClass('SVGElement', {
 get$children: function() {
  return $.FilteredElementList$(this);
},
 get$$$dom_children: function() {
  throw $.$$throw($.UnsupportedError$("Cannot get dom_children on SVG."));
},
 click$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot invoke click SVG."));
},
 get$click: function() {
  return new $.BoundClosure0(this, 'click$0');
},
 get$id: function() {
  return this.id;
},
 set$id: function(value) {
  this.id = value;
}
});

$.$defineNativeClass('SVGException', {"":"code>,message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGSVGElement', {"":"height>"
});

$.$defineNativeClass('SVGUseElement', {"":"height>"
});

// 132 dynamic classes.
// 256 classes
// 23 !leaf
(function() {
  var v0_ComponentTransferFunctionElement = 'SVGComponentTransferFunctionElement|SVGFEFuncGElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncRElement', v1_MediaElement = 'HTMLMediaElement|HTMLAudioElement|HTMLVideoElement', v2_SvgElement = [v0_ComponentTransferFunctionElement, 'SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPositioningElement|SVGAltGlyphElement|SVGTRefElement|SVGTSpanElement|SVGTextElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEComponentTransferElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDiffuseLightingElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFESpotLightElement|SVGFETileElement|SVGFilterElement|SVGFETurbulenceElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGElement|SVGGlyphRefElement|SVGHKernElement|SVGImageElement|SVGGlyphElement|SVGFEImageElement|SVGLineElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGMissingGlyphElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGMetadataElement|SVGFEOffsetElement|SVGPathElement|SVGFEGaussianBlurElement|SVGFEMergeElement|SVGFEMergeNodeElement|SVGFEMorphologyElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGVKernElement|SVGUseElement|SVGViewElement'].join('|'), v3_Element = [v1_MediaElement, v2_SvgElement, 'Element|HTMLElement|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLFrameElement|HTMLImageElement|HTMLInputElement|HTMLIFrameElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMarqueeElement|HTMLMapElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement'].join('|'), v4_CharacterData = 'CharacterData|Text|CDATASection|Comment', v5_Document = 'Document|SVGDocument|HTMLDocument', v6_DocumentFragment = 'DocumentFragment|ShadowRoot', v7_Node = [v3_Element, v4_CharacterData, v5_Document, v6_DocumentFragment, 'Node|Attr|DocumentType|Notation|ProcessingInstruction|EntityReference'].join('|'), v8_MediaStream = 'MediaStream|LocalMediaStream';
  $.dynamicSetMetadata([['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection'], ['SVGComponentTransferFunctionElement', v0_ComponentTransferFunctionElement], ['SVGElement', v2_SvgElement], ['HTMLMediaElement', v1_MediaElement], ['MediaStream', v8_MediaStream], ['Element', v3_Element], ['CharacterData', v4_CharacterData], ['Document', v5_Document], ['DocumentFragment', v6_DocumentFragment], ['Node', v7_Node], ['NodeList', 'NodeList|RadioNodeList'], ['Blob', 'Blob|File'], ['Uint8Array', 'Uint8Array|Uint8ClampedArray'], ['Event', 'Event|UIEvent|MouseEvent|WheelEvent|CompositionEvent|KeyboardEvent|SVGZoomEvent|TextEvent|TouchEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|WebKitAnimationEvent|BeforeLoadEvent|CloseEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|HashChangeEvent|ProgressEvent|XMLHttpRequestProgressEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|AudioProcessingEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent'], ['EventTarget', [v7_Node, v8_MediaStream, 'EventTarget|WebSocket|DOMWindow|RTCDataChannel|RTCPeerConnection'].join('|')]]);
})();


//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.main(); });
      } else {
        $.main();
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.main(); });
  } else {
    $.main();
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] = new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=wheel.dart.js.map